{"version":3,"sources":["shared/globals.js","state/actions/project-action.js","state/actions/task-action.js","components/navbars/sidebar/sidebar.js","shared/shared.js","state/actions/department-action.js","state/actions/user-action.js","state/actions/general-action.js","components/navbars/topbar/topbar.js","components/error/error.js","components/project/project-form.js","shared/pagination/usePagination.js","shared/pagination/Pagination.js","components/project/project-list.js","components/task/comment/comment-form.js","components/task/subtask/subtask-form.js","components/task/comment/comment-list.js","components/task/subtask/subtask-list.js","components/task/task-details.js","components/task/task-form.js","components/task/task-list.js","components/user/user-form.js","components/user/user-list.js","components/departments/department-form.js","components/departments/department-list.js","components/login/login.js","components/settings/durations/duration-form.js","components/settings/durations/duration-list.js","components/content/content.js","state/reducers/department-reducer.js","state/reducers/general-reducer.js","state/reducers/project-reducer.js","state/reducers/task-reducer.js","state/reducers/user-reducer.js","state/reducers/root-reducer.js","state/store.js","App.js","index.js"],"names":["apiDomain","PROJECT_ACTIVE_COUNT","PROJECT_FILTERS","PROJECT_FETCH","PROJECT_USER_FETCH","PROJECT_INSERT","PROJECT_DELETE","PROJECT_DEACTIVATE","PROJECT_UPDATE","PROJECT_ERROR","PROJECT_ISLOADING","SELECTED_PROJECT","PROJECT_RESET_STATE","apiUrl","apiUrlProjectUser","options","headers","withCredentials","responseType","fetchProjectsByUser","usr","curDateFrom","curDateTo","console","log","dispatch","type","payload","axios","get","then","response","data","catch","err","setSelectedProject","prj","setProjectFilters","filters","TASK_ACTIVE_COUNT","TASK_USER_FETCH","TASK_FILTERS","TASK_FETCH","TASK_FETCH_ID","TASK_INSERT","TASK_DELETE","TASK_DEACTIVATE","TASK_UPDATE","TASK_ERROR","TASK_ISLOADING","TASK_RESET_STATE","SELECTED_TASK","COMMENT_INSERT","COMMENT_UPDATE","COMMENT_DELETE","COMMENT_DEACTIVATE","SELECTED_COMMENT","SUBTASK_INSERT","SUBTASK_UPDATE","SUBTASK_DELETE","SUBTASK_DEACTIVATE","SELECTED_SUBTASK","apiUrlComments","apiUrlSubTasks","apiUrlTaskUser","fetchTaskById","id","fetchTaskByUser","dateFrom","dateTo","setSelectedTask","tsk","setTaskFilters","setSelectedComment","cmn","setSelectedSubTask","sbt","SideBar","location","useLocation","useDispatch","sideBarState","useSelector","state","generalState","sideBar","stateLogin","login","projects","projectState","tasks","taskState","activeProjects","activeTasks","role","useState","sdb","setSdb","useEffect","className","src","alt","title","href","to","pathname","style","textShadow","includes","prepareFilterDateAndSend","currDate","month","Date","getMonth","year","getFullYear","fixDate","dtInput","dt","getDate","slice","fixTime","getHours","getMinutes","getSeconds","resetValidatedUserInfo","sessionStorage","setItem","JSON","stringify","department","email","position","getValidatedUserInfo","info","parse","getItem","DEPARTMENT_FILTERS","DEPARTMENT_FETCH","DEPARTMENT_USER_FETCH","DEPARTMENT_INSERT","DEPARTMENT_DELETE","DEPARTMENT_DEACTIVATE","DEPARTMENT_UPDATE","DEPARTMENT_ERROR","SELECTED_DEPARTMENT","DEPARTMENT_RESET_STATE","fetchDepartments","setSelectedDepartment","dprt","ROLE_FETCH","USER_FILTERS","USER_FETCH","USER_INSERT","USER_DELETE","USER_UPDATE","USER_ERROR","USER_ISLOADING","SELECTED_USER","USER_RESET_STATE","apiUrlRoles","fetchUsers","fetchRoles","setSelectedUser","setUserFilters","USER_LOGIN","USER_LOGIN_RESET","USER_SESSION_SET","COMPUTED_DURATION_DEFAULT","COMPUTED_DURATION_FETCH","COMPUTED_DURATION_INSERT","COMPUTED_DURATION_DELETE","COMPUTED_DURATION_UPDATE","COMPUTED_DURATION_ERROR","SELECTED_COMPUTED_DURATION","STATE_FETCH","PRIORITY_FETCH","SIDEBAR_STATE","GENERAL_ERROR","apiStatesUrl","apicomputedDurationsUrl","apiPrioritiesUrl","apiUrlUsers","fetchStates","fetchPriorities","fetchComputeDurations","setUserBySession","resetUserByLogin","getDefaultComputedDurationById","setSelectedComputeDuration","dur","Topbar","history","useHistory","userInfo","push","onClick","ErrorCmp","message","indexOf","overflow","ProjectForm","curProject","selectedProject","states","priorities","computeDurationUnits","computeDurations","projectForm","setProjectForm","result","Number","parseFloat","duration","defaultComputedDuration","factor","error","_id","durationUnit","clearObj","projectName","description","computedDuration","deadline","isEnabled","priority","createdBy","updatedAt","updatedBy","handleOnChange","e","target","name","value","trim","onSubmit","hst","preventDefault","post","toast","goBack","put","updateProject","htmlFor","onChange","required","min","step","map","item","code","toFixed","placeholder","readOnly","dateFormat","selected","date","handleOnStartDateChange","stateName","rows","maxLength","resize","DOTS","range","start","end","length","Array","from","_","idx","Pagination","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","pageNumber","override","css","ProjectList","registerLocale","el","filter","toLowerCase","parseInt","createdFrom","createdAt","createdTo","deadlineFrom","deadlineTo","users","userState","isLoading","setCurrentPage","curSelectedMonthFrom","curSelectedMonthTo","selectedUser","selectedMonthFrom","selectedMonthTo","handleDeleteBtn","confirm","delete","deleteProject","handleFiltersOnChacge","projectsTableData","marginBottom","color","loading","size","handleMonthFromOnChange","showMonthYearPicker","minDate","handleMonthToOnChange","scope","colSpan","nowrap","locale","handleFiltersCreatedFromOnChacge","border","width","handleFiltersCreatedToOnChacge","handleFiltersDeadlineFromOnChacge","handleFiltersDeadlineToOnChacge","defaultValue","project","cnt","find","align","handleEditBtn","page","CommentForm","curComment","selectedComment","curTask","taskById","commentForm","setCommentForm","task","user","updateComment","SubTaskForm","curSubTask","selectedSubTask","subTaskForm","setSubTaskForm","subTaskName","startDate","startTime","guid","uuidv4","updateSubTask","toDateString","timeIntervals","timeCaption","showTimeSelect","showTimeSelectOnly","time","toLocaleString","CommentsTemplate","comments","param","useParams","deleteComment","commentsTableData","cm","i","SubTasksTemplate","subtasks","deleteSubTask","subTasksTableData","TaskList","deleteTask","TaskTemplate","taskName","endDate","toLocaleDateString","assignedTo","padding","TaskForm","stateId","selectedTask","taskForm","setTaskForm","updateTask","departments","departmentState","startDateFrom","startDateTo","tasksTableData","handleFiltersStartDateFromOnChacge","handleFiltersStartDateToOnChacge","handleFiltersStartDateOnChacge","handleFiltersEndDateOnChacge","UserForm","curUser","roles","userForm","setUserForm","username","password","telephone","mobile","internalPhone","updateUser","UserList","deleteUser","usersTableData","UserTemplate","DepartmentForm","selectedDepartment","departmentForm","setdepartmentForm","updateDepartment","DepartmentList","deleteDepartment","DepartmentTemplate","Login","setLogin","handleChangeLoginInfo","getUserByLogin","undefined","validatedUserInfo","fontSize","autoFocus","DurationForm","compDuration","selectedComputedDuration","compDurationForm","setcompDurationForm","isDefault","creaatedAt","updateComputeDuration","DurationList","durations","deleteComputeDuration","Content","path","exact","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","trace","traceLimit","App","autoClose","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e142c28.chunk.js","sourcesContent":["export const forPublish = false;\r\nexport const port = '3001';\r\nexport const apiDomain = forPublish\r\n  ? 'http://orbiesapi.dev.gr'\r\n  : `http://localhost:${port}`;\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { apiDomain } from '../../shared/globals';\r\n\r\nexport const PROJECT_ACTIVE_COUNT = 'PROJECT_ACTIVE_COUNT';\r\nexport const PROJECT_FILTERS = 'PROJECT_FILTERS';\r\nexport const PROJECT_FETCH = 'PROJECT_FETCH';\r\nexport const PROJECT_USER_FETCH = 'PROJECT_USER_FETCH';\r\nexport const PROJECT_INSERT = 'PROJECT_INSERT';\r\nexport const PROJECT_DELETE = 'PROJECT_DELETE';\r\nexport const PROJECT_DEACTIVATE = 'PROJECT_DEACTIVATE';\r\nexport const PROJECT_UPDATE = 'PROJECT_UPDATE';\r\nexport const PROJECT_ERROR = 'PROJECT_ERROR';\r\nexport const PROJECT_ISLOADING = 'PROJECT_ISLOADING';\r\nexport const SELECTED_PROJECT = 'SELECTED_PROJECT';\r\nexport const PROJECT_RESET_STATE = 'PROJECT_RESET_STATE';\r\n\r\nlet apiUrl = null;\r\nlet apiUrlProjectUser = null;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  apiUrl = '/api/project';\r\n  apiUrlProjectUser = '/api/project/byuser';\r\n} else {\r\n  apiUrl = `${apiDomain}/api/project`;\r\n  apiUrlProjectUser = `${apiDomain}/api/project/byuser`;\r\n}\r\n\r\nconst options = {\r\n  headers: { 'content-type': 'application/json' },\r\n  withCredentials: false,\r\n  responseType: 'json'\r\n};\r\n\r\nexport function fetchProjects() {\r\n  console.log('fetchProjects fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PROJECT_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_FETCH,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: PROJECT_ISLOADING,\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchProjectsByUser(\r\n  usr,\r\n  curDateFrom,\r\n  curDateTo\r\n) {\r\n  console.log('fetchProjectsByUser fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PROJECT_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(\r\n        `${apiUrlProjectUser}/${usr}/from/${curDateFrom}/to/${curDateTo}`\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_USER_FETCH,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: PROJECT_ISLOADING,\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function insertProject(hst, prj) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrl, prj, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_INSERT,\r\n          payload: prj\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Project successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateProject(hst, prj) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrl}/${prj._id}`, prj, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_UPDATE,\r\n          payload: prj\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Project successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteProject(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_DELETE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Project successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deactivateProject(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrl}/deactivate/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_DEACTIVATE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Project successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedProject(prj) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_PROJECT,\r\n      payload: prj\r\n    });\r\n  };\r\n}\r\n\r\nexport function setProjectFilters(filters) {\r\n  console.log('setProjectFilters fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PROJECT_FILTERS,\r\n      payload: filters\r\n    });\r\n  };\r\n}\r\n\r\nexport function setProjectInitialState() {\r\n  console.log('setProjectInitialState fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: PROJECT_RESET_STATE\r\n    });\r\n  };\r\n}\r\n\r\nexport function getActiveProjects() {\r\n  console.log('getActiveProjects fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`${apiUrl}/count`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PROJECT_ACTIVE_COUNT,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: PROJECT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { apiDomain } from '../../shared/globals';\r\n\r\nexport const TASK_ACTIVE_COUNT = 'TASK_ACTIVE_COUNT';\r\nexport const TASK_USER_FETCH = 'TASK_USER_FETCH';\r\nexport const TASK_FILTERS = 'TASK_FILTERS';\r\nexport const TASK_FETCH = 'TASK_FETCH';\r\nexport const TASK_FETCH_ID = 'TASK_FETCH_ID';\r\nexport const TASK_INSERT = 'TASK_INSERT';\r\nexport const TASK_DELETE = 'TASK_DELETE';\r\nexport const TASK_DEACTIVATE = 'TASK_DEACTIVATE';\r\nexport const TASK_UPDATE = 'TASK_UPDATE';\r\nexport const TASK_ERROR = 'TASK_ERROR';\r\nexport const TASK_ISLOADING = 'TASK_ISLOADING';\r\nexport const TASK_RESET_STATE = 'TASK_RESET_STATE';\r\nexport const SELECTED_TASK = 'SELECTED_TASK';\r\nexport const COMMENT_INSERT = 'COMMENT_INSERT';\r\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\r\nexport const COMMENT_DEACTIVATE = 'COMMENT_DEACTIVATE';\r\nexport const SELECTED_COMMENT = 'SELECTED_COMMENT';\r\nexport const SUBTASK_INSERT = 'SUBTASK_INSERT';\r\nexport const SUBTASK_UPDATE = 'SUBTASK_UPDATE';\r\nexport const SUBTASK_DELETE = 'SUBTASK_DELETE';\r\nexport const SUBTASK_DEACTIVATE = 'SUBTASK_DEACTIVATE';\r\nexport const SELECTED_SUBTASK = 'SELECTED_SUBTASK';\r\n\r\nconst apiUrl = `${apiDomain}/api/task`;\r\nconst apiUrlComments = `${apiDomain}/api/comment`;\r\nconst apiUrlSubTasks = `${apiDomain}/api/subtask`;\r\nconst apiUrlTaskUser = `${apiDomain}/api/task/byuser`;\r\n\r\nconst options = {\r\n  headers: { 'content-type': 'application/json' },\r\n  withCredentials: false,\r\n  responseType: 'json'\r\n};\r\n\r\n/*******************************************************\r\n *  TASKS\r\n ******************************************************/\r\nexport function fetchTasks() {\r\n  console.log('fetchTasks fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TASK_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_FETCH,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: 'TASK_ISLOADING',\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchTaskById(id) {\r\n  console.log('fetchTaskById fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TASK_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(`${apiUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_FETCH_ID,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: 'TASK_ISLOADING',\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchTaskByUser(usr, dateFrom, dateTo) {\r\n  console.log('fetchTaskByUser fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TASK_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(\r\n        `${apiUrlTaskUser}/${usr}/from/${dateFrom}/to/${dateTo}`\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_USER_FETCH,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: TASK_ISLOADING,\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function insertTask(hst, tsk) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrl, tsk, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_INSERT,\r\n          payload: tsk\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Task successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateTask(hst, tsk) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrl}/${tsk._id}`, tsk, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_UPDATE,\r\n          payload: tsk\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Task successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateTaskDuration(tsk) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrl}/${tsk.id}`, tsk, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_UPDATE,\r\n          payload: tsk\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Task successfully updated!`);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteTask(hst, id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_DELETE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Task successfully deleted!');\r\n        hst.push('/tasks');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deactivateTask(hst, id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrl}/Deactivate/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_DEACTIVATE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Task successfully deleted!');\r\n        hst.push('/tasks');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedTask(tsk) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_TASK,\r\n      payload: tsk\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTaskFilters(filters) {\r\n  console.log('setTaskFilters fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TASK_FILTERS,\r\n      payload: filters\r\n    });\r\n  };\r\n}\r\n\r\nexport function setTaskInitialState() {\r\n  console.log('setTaskInitialState fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TASK_RESET_STATE\r\n    });\r\n  };\r\n}\r\n\r\nexport function getActiveTasks() {\r\n  console.log('getActiveTasks fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`${apiUrl}/count`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: TASK_ACTIVE_COUNT,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n/*******************************************************\r\n *  COMMENTS\r\n ******************************************************/\r\nexport function insertComment(hst, cmn) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrlComments, cmn, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMMENT_INSERT,\r\n          payload: cmn\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Comment successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateComment(hst, cmn) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrlComments}/${cmn._id}`, cmn, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMMENT_UPDATE,\r\n          payload: cmn\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Comment successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteComment(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrlComments}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMMENT_DELETE\r\n        });\r\n        // if success toast it\r\n        toast.info('Comment successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deactivateComment(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrlComments}/deactivate/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMMENT_DEACTIVATE\r\n        });\r\n        // if success toast it\r\n        toast.info('Comment successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedComment(cmn) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_COMMENT,\r\n      payload: cmn\r\n    });\r\n  };\r\n}\r\n\r\n/*******************************************************\r\n *  SUBTASKS\r\n ******************************************************/\r\nexport function insertSubTask(hst, sbt) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrlSubTasks, sbt, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: SUBTASK_INSERT,\r\n          payload: sbt\r\n        });\r\n        // if success toast it and redirect to task details\r\n        toast.info(`SubTask successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateSubTask(hst, sbt) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrlSubTasks}/${sbt._id}`, sbt, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: SUBTASK_UPDATE,\r\n          payload: sbt\r\n        });\r\n        // if success toast it and redirect to task details\r\n        toast.info(`SubTask successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteSubTask(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrlSubTasks}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: SUBTASK_DELETE\r\n        });\r\n        // if success toast it\r\n        toast.info('SubTask successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deactivateSubTask(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrlSubTasks}/Deactivate/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: SUBTASK_DEACTIVATE\r\n        });\r\n        // if success toast it\r\n        toast.info('SubTask successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: TASK_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedSubTask(sbt) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_SUBTASK,\r\n      payload: sbt\r\n    });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { getActiveProjects } from '../../../state/actions/project-action';\r\nimport { getActiveTasks } from '../../../state/actions/task-action';\r\nimport './sidebar.css';\r\n\r\nexport default function SideBar() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const sideBarState = useSelector((state) => state.generalState.sideBar);\r\n  const stateLogin = useSelector((state) => state.generalState.login);\r\n  const projects = useSelector((state) => state.projectState.projects);\r\n  const tasks = useSelector((state) => state.taskState.tasks);\r\n  const activeProjects = useSelector((state) => state.projectState.activeProjects);\r\n  const activeTasks = useSelector((state) => state.taskState.activeTasks);\r\n  const role = useSelector((state) => state.generalState.login?.role);\r\n  const [sdb, setSdb] = useState(sideBarState);\r\n\r\n  useEffect(() => {\r\n    setSdb(sideBarState);\r\n  }, [sideBarState]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getActiveProjects())\r\n      .then(() => dispatch(getActiveTasks()));\r\n  }, [projects, tasks]);\r\n\r\n  return (\r\n    <nav id='sidebar' className={(sdb === '' ? 'active' : '')}>\r\n      <div className='sidebar-header shadow-sm'>\r\n        <span id=\"logo\">Interlife Orbies</span>\r\n      </div>\r\n      <div id=\"userAvatar\">\r\n        <img\r\n          src='/images/avatar_transp.gif'\r\n          alt='userAvatar'\r\n          id='avatar' />\r\n        {stateLogin\r\n          ? <span>Welcome <br /> {stateLogin.title}</span>\r\n          : <span>Welcome User</span>\r\n        }\r\n      </div>\r\n      <ul className='list-unstyled components'>\r\n        <li className='active'>\r\n          <a\r\n            href='#'\r\n            data-toggle='collapse'\r\n            aria-expanded='true'\r\n            className='dropdown-toggle'>Main</a>\r\n          <ul className='list-unstyled' id='homeSubmenu'>\r\n            <li>\r\n              <Link to='/'\r\n                className={'sideBarLink ' +\r\n                  (location.pathname === '/' ||\r\n                    location.pathname === '/add' ? 'active' : '')}\r\n                aria-current='true'>\r\n                <div className='d-flex w-100 justify-content-between'>\r\n                  <h6 className='mb-1'>\r\n                    <i className='bi bi-briefcase'></i> &nbsp; Projects &nbsp;\r\n                    <span\r\n                      className=\"badge badge-light\"\r\n                      style={{ textShadow: 'none' }}\r\n                      title={`${activeProjects} active projects`}\r\n                    >{activeProjects}</span>\r\n                </h6>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/tasks'\r\n                className={'sideBarLink ' +\r\n                  (location.pathname === '/tasks' ||\r\n                    location.pathname === '/tasks/add' ||\r\n                    location.pathname.includes('/tasks/details/') ||\r\n                    location.pathname.includes('/tasks/subtasks/add') ||\r\n                    location.pathname.includes('/tasks/comments/add') ? 'active' : '')}\r\n                aria-current='true'>\r\n                <div className='d-flex w-100 justify-content-between'>\r\n                  <h6 className='mb-1'>\r\n                    <i className='bi bi-list-task'></i> &nbsp; Tasks  &nbsp;\r\n                    <span\r\n                      className=\"badge badge-light\"\r\n                      style={{ textShadow: 'none' }}\r\n                      title={`${activeTasks} active tasks`}\r\n                    >{activeTasks}</span>\r\n                </h6>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/users'\r\n                className={'sideBarLink ' +\r\n                  (location.pathname === '/users' ||\r\n                    location.pathname === '/users/add' ? 'active' : '')}\r\n                aria-current='true'>\r\n                <div className='d-flex w-100 justify-content-between'>\r\n                  <h6 className='mb-1'>\r\n                    <i className='bi bi-people'></i> &nbsp; Users\r\n                </h6>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/departments'\r\n                className={'sideBarLink ' +\r\n                  (location.pathname === '/departments' ||\r\n                    location.pathname === '/departments/add' ? 'active' : '')}\r\n                aria-current='true'>\r\n                <div className='d-flex w-100 justify-content-between'>\r\n                  <h6 className='mb-1'>\r\n                    <i className=\"bi bi-person-check-fill\"></i> &nbsp; Departments\r\n                </h6>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {role === 'Administrator' && (\r\n          <>\r\n            <hr />\r\n            <li>\r\n              <a\r\n                href='#'\r\n                data-toggle='collapse'\r\n                aria-expanded='true'\r\n                className='dropdown-toggle'>Settings</a>\r\n              <ul className='list-unstyled' id='settingsSubmenu'>\r\n                <li>\r\n                  <Link to='/settings/computeduration'\r\n                    className={'sideBarLink ' +\r\n                      (location.pathname === '/settings/computeduration' ||\r\n                        location.pathname === '/settings/computeduration/add' ? 'active' : '')}\r\n                    aria-current='true'>\r\n                    <div className='d-flex w-100 justify-content-between'>\r\n                      <h6 className='mb-1'>\r\n                        <i className=\"bi bi-clock-history\"></i> &nbsp; Compute Durations\r\n                </h6>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </>\r\n        )}\r\n      </ul>\r\n\r\n    </nav>\r\n  );\r\n}\r\n","export const prepareFilterDateAndSend = (currDate) => {\r\n  const month = new Date(currDate).getMonth() + 1;\r\n  const year = new Date(currDate).getFullYear();\r\n  const dt = `${month}|${year}`;\r\n  return dt;\r\n};\r\n\r\nexport const getDateTimeFromTicks = (ticks) => {\r\n  var ticksToMicrotime = ticks / 10000;\r\n  var epochMicrotimeDiff = Math.abs(new Date(0, 0, 1).setFullYear(1));\r\n  var tickDate = new Date(ticksToMicrotime - epochMicrotimeDiff);\r\n  return tickDate;\r\n};\r\n\r\nexport const fixDate = (dtInput) => {\r\n  const dt = new Date(dtInput);\r\n  return ('0' + dt.getDate()).slice(-2) + '/' + ('0' + (dt.getMonth() + 1)).slice(-2) + '/' + dt.getFullYear();\r\n};\r\n\r\nexport const fixDateTime = (dtInput) => {\r\n  const dt = new Date(dtInput);\r\n  return ('0' + dt.getDate()).slice(-2) + '/' + ('0' + (dt.getMonth() + 1)).slice(-2) + '/' + dt.getFullYear() + ' ' + dt.getHours() + ':' + dt.getMinutes() + ':' + dt.getSeconds();\r\n};\r\n\r\nexport const fixTime = (dtInput) => {\r\n  const dt = new Date(dtInput);\r\n  return ('0' + dt.getHours()).slice(-2) + ':' + ('0' + dt.getMinutes()).slice(-2) + ':' + ('0' + dt.getSeconds()).slice(-2);\r\n};\r\n\r\nexport const getPageSize = () => {\r\n  return 10;\r\n};\r\n\r\nexport const saveValidatedUserInfo = (userInfo) => {\r\n  // save user info into session storage\r\n  console.log(userInfo);\r\n  sessionStorage.setItem('validatedUser', JSON.stringify(userInfo));\r\n};\r\n\r\nexport const resetValidatedUserInfo = () => {\r\n  // reset user info into session storage\r\n  sessionStorage.setItem('validatedUser', JSON.stringify({\r\n    department: null,\r\n    email: null,\r\n    id: null,\r\n    position: null,\r\n    role: null,\r\n    title: null\r\n  }));\r\n};\r\n\r\nexport const getValidatedUserInfo = () => {\r\n  // get user info from session storage\r\n  const info = JSON.parse(sessionStorage.getItem('validatedUser'));\r\n  if (info === null || info.id === 0 || info.id === null) {\r\n    return {\r\n      id: 0,\r\n      title: '',\r\n      email: '',\r\n      department: '',\r\n      position: '',\r\n      role: ''\r\n    };\r\n  }\r\n  return info;\r\n};\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { apiDomain } from '../../shared/globals';\r\n\r\nexport const DEPARTMENT_FILTERS = 'DEPARTMENT_FILTERS';\r\nexport const DEPARTMENT_FETCH = 'DEPARTMENT_FETCH';\r\nexport const DEPARTMENT_USER_FETCH =\r\n  'DEPARTMENT_USER_FETCH';\r\nexport const DEPARTMENT_INSERT = 'DEPARTMENT_INSERT';\r\nexport const DEPARTMENT_DELETE = 'DEPARTMENT_DELETE';\r\nexport const DEPARTMENT_DEACTIVATE =\r\n  'DEPARTMENT_DEACTIVATE';\r\nexport const DEPARTMENT_UPDATE = 'DEPARTMENT_UPDATE';\r\nexport const DEPARTMENT_ERROR = 'DEPARTMENT_ERROR';\r\nexport const SELECTED_DEPARTMENT = 'SELECTED_DEPARTMENT';\r\nexport const DEPARTMENT_RESET_STATE =\r\n  'DEPARTMENT_RESET_STATE';\r\n\r\nconst apiUrl = `${apiDomain}/api/department`;\r\n\r\nconst options = {\r\n  headers: { 'content-type': 'application/json' },\r\n  withCredentials: false,\r\n  responseType: 'json'\r\n};\r\n\r\nexport function fetchDepartments() {\r\n  console.log('fetchDepartments fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchDepartmentByUser(usr) {\r\n  console.log('fetchDepartmentByUser fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`${apiUrlDepartmentUser}/${usr}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_USER_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function insertDepartment(hst, dprt) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrl, dprt, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_INSERT,\r\n          payload: dprt\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Department successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateDepartment(hst, dprt) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrl}/${dprt._id}`, dprt, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_UPDATE,\r\n          payload: dprt\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Department successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteDepartment(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_DELETE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Department successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deactivateDepartment(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrl}/Deactivate/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: DEPARTMENT_DEACTIVATE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Department successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        dispatch({\r\n          type: DEPARTMENT_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedDepartment(dprt) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_DEPARTMENT,\r\n      payload: dprt\r\n    });\r\n  };\r\n}\r\n\r\nexport function setDepartmentInitialState() {\r\n  console.log('setDepartmentInitialState fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: DEPARTMENT_RESET_STATE\r\n    });\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { apiDomain } from '../../shared/globals';\r\n\r\nexport const ROLE_FETCH = 'ROLE_FETCH';\r\nexport const USER_FILTERS = 'USER_FILTERS';\r\nexport const USER_FETCH = 'USER_FETCH';\r\nexport const USER_INSERT = 'USER_INSERT';\r\nexport const USER_DELETE = 'USER_DELETE';\r\nexport const USER_UPDATE = 'USER_UPDATE';\r\nexport const USER_ERROR = 'USER_ERROR';\r\nexport const USER_ISLOADING = 'USER_ISLOADING';\r\nexport const SELECTED_USER = 'SELECTED_USER';\r\nexport const USER_RESET_STATE = 'USER_RESET_STATE';\r\n\r\nconst apiUrl = `${apiDomain}/api/user`;\r\nconst apiUrlRoles = `${apiDomain}/api/userrole`;\r\n\r\nconst options = {\r\n  headers: { 'content-type': 'application/json' },\r\n  withCredentials: false,\r\n  responseType: 'json'\r\n};\r\n\r\nexport function fetchUsers() {\r\n  console.log('fetchUsers fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_ISLOADING,\r\n      payload: true\r\n    });\r\n    return axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: USER_FETCH,\r\n          payload: response.data\r\n        });\r\n        dispatch({\r\n          type: USER_ISLOADING,\r\n          payload: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: USER_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchRoles() {\r\n  console.log('fetchRoles fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(apiUrlRoles)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: ROLE_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: USER_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function insertUser(hst, usr) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apiUrl, usr, options)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: USER_INSERT,\r\n          payload: usr\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`User successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: USER_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateUser(hst, usr) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(`${apiUrl}/${usr._id}`, usr)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: USER_UPDATE,\r\n          payload: usr\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`User successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: USER_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apiUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: USER_DELETE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('User successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: USER_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedUser(usr) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_USER,\r\n      payload: usr\r\n    });\r\n  };\r\n}\r\n\r\nexport function setUserFilters(filters) {\r\n  console.log('setUserFilters fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_FILTERS,\r\n      payload: filters\r\n    });\r\n  };\r\n}\r\n\r\nexport function setUserInitialState() {\r\n  console.log('setUserInitialState fetched...');\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_RESET_STATE\r\n    });\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { apiDomain } from '../../shared/globals';\r\nimport { resetValidatedUserInfo } from '../../shared/shared';\r\nimport { setDepartmentInitialState } from './department-action';\r\nimport { setProjectInitialState } from './project-action';\r\nimport { setTaskInitialState } from './task-action';\r\nimport { setUserInitialState } from './user-action';\r\n\r\nexport const USER_LOGIN = 'USER_LOGIN';\r\nexport const USER_LOGIN_RESET = 'USER_LOGIN_RESET';\r\nexport const USER_SESSION_SET = 'USER_SESSION_SET';\r\nexport const COMPUTED_DURATION_DEFAULT =\r\n  'COMPUTED_DURATION_DEFAULT';\r\nexport const COMPUTED_DURATION_FETCH =\r\n  'COMPUTED_DURATION_FETCH';\r\nexport const COMPUTED_DURATION_INSERT =\r\n  'COMPUTED_DURATION_INSERT';\r\nexport const COMPUTED_DURATION_DELETE =\r\n  'COMPUTED_DURATION_DELETE';\r\nexport const COMPUTED_DURATION_UPDATE =\r\n  'COMPUTED_DURATION_UPDATE';\r\nexport const COMPUTED_DURATION_ERROR =\r\n  'COMPUTED_DURATION_ERROR';\r\nexport const SELECTED_COMPUTED_DURATION =\r\n  'SELECTED_COMPUTED_DURATION';\r\nexport const STATE_FETCH = 'STATE_FETCH';\r\nexport const PRIORITY_FETCH = 'PRIORITY_FETCH';\r\nexport const SIDEBAR_STATE = 'SIDEBAR_STATE';\r\nexport const GENERAL_ERROR = 'GENERAL_ERROR';\r\n\r\nconst apiStatesUrl = `${apiDomain}/api/state`;\r\nconst apicomputedDurationsUrl = `${apiDomain}/api/computeDuration`;\r\nconst apiPrioritiesUrl = `${apiDomain}/api/priority`;\r\nconst apiUrlUsers = `${apiDomain}/api/user`;\r\n\r\nconst options = {\r\n  headers: { 'content-type': 'application/json' },\r\n  withCredentials: false,\r\n  responseType: 'json'\r\n};\r\n\r\nexport function fetchStates() {\r\n  console.log('fetchStates fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(apiStatesUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: STATE_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: GENERAL_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchPriorities() {\r\n  console.log('fetchPriorities fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(apiPrioritiesUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: PRIORITY_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: GENERAL_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchComputeDurations() {\r\n  console.log('fetchComputeDurations fetched...');\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(apicomputedDurationsUrl)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_FETCH,\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: GENERAL_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function changeSidebarState(state) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SIDEBAR_STATE,\r\n      payload: state\r\n    });\r\n  };\r\n}\r\n\r\nexport function getUserByLogin({ email, password }) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${apiUrlUsers}/ByLogin`, { email, password })\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: USER_LOGIN,\r\n          payload: response.data\r\n        });\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        resetValidatedUserInfo();\r\n        dispatch({\r\n          type: GENERAL_ERROR,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setUserBySession(usr) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_SESSION_SET,\r\n      payload: usr\r\n    });\r\n  };\r\n}\r\n\r\nexport function resetUserByLogin() {\r\n  return (dispatch) => {\r\n    // reset filters on signout\r\n    dispatch(setTaskInitialState());\r\n    dispatch(setUserInitialState());\r\n    dispatch(setDepartmentInitialState());\r\n    dispatch(setProjectInitialState());\r\n    // reset filters on signout\r\n    dispatch({\r\n      type: USER_LOGIN_RESET\r\n    });\r\n  };\r\n}\r\n\r\nexport function getDefaultComputedDurationById(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`${apicomputedDurationsUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_DEFAULT,\r\n          payload: response.data\r\n        });\r\n        return response;\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: GENERAL_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setSelectedComputeDuration(dur) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_COMPUTED_DURATION,\r\n      payload: dur\r\n    });\r\n  };\r\n}\r\n\r\nexport function insertSelectedComputeDuration(hst, dur) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(apicomputedDurationsUrl, dur, options)\r\n      .then((response) => {\r\n        console.log(response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_INSERT,\r\n          payload: dur\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Duration successfully inserted!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteComputeDuration(id) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .delete(`${apicomputedDurationsUrl}/${id}`)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_DELETE,\r\n          payload: id\r\n        });\r\n        // if success toast it\r\n        toast.info('Duration successfully deleted!');\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateComputeDuration(hst, dur) {\r\n  return (dispatch) => {\r\n    return axios\r\n      .put(\r\n        `${apicomputedDurationsUrl}/${dur._id}`,\r\n        dur,\r\n        options\r\n      )\r\n      .then((response) => {\r\n        // console.log(response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_UPDATE,\r\n          payload: dur\r\n        });\r\n        // if success toast it and redirect to projects\r\n        toast.info(`Duration successfully updated!`);\r\n        hst.goBack();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        dispatch({\r\n          type: COMPUTED_DURATION_ERROR,\r\n          payload: err.response\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  resetValidatedUserInfo,\r\n  getValidatedUserInfo\r\n} from '../../../shared/shared';\r\nimport {\r\n  changeSidebarState,\r\n  resetUserByLogin,\r\n  setUserBySession\r\n} from '../../../state/actions/general-action';\r\nimport './topbar.css';\r\n\r\nexport default function Topbar() {\r\n  const dispatch = useDispatch();\r\n  const sideBar = useSelector((state) => state.generalState.sideBar);\r\n  const stateLogin = useSelector((state) => state.generalState.login);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n    }\r\n  }, []);\r\n\r\n  const handleSideBarState = () => {\r\n    dispatch(changeSidebarState(sideBar === '' ? 'active' : ''));\r\n  };\r\n\r\n  const handleSignOutUser = () => {\r\n    resetValidatedUserInfo();\r\n    dispatch(resetUserByLogin());\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow-sm\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          type=\"button\"\r\n          id=\"sidebarCollapse\"\r\n          className=\"btn btn-info shadow-sm\"\r\n          onClick={handleSideBarState}\r\n        >\r\n          <i className=\"bi bi-text-left\"></i>&nbsp;\r\n          <span>Menu</span>\r\n        </button>\r\n        <button\r\n          className=\"btn btn-dark d-inline-block d-lg-none ml-auto\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <i className=\"bi bi-justify\"></i>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"nav navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              {stateLogin\r\n                ? <a href=\"#\"\r\n                  onClick={handleSignOutUser}>\r\n                  Signout <b>{stateLogin.title}</b>\r\n                </a>\r\n                : <Link to='/login'>\r\n                  <b>\r\n                    <i\r\n                      className=\"bi bi-person-circle\"\r\n                    ></i>&nbsp;\r\n                    <span>Sign In</span>\r\n                  </b>\r\n                </Link>\r\n              }\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './error.css';\r\n\r\nexport default function ErrorCmp({ err }) {\r\n  // console.log(err);\r\n\r\n  if (err.data) {\r\n    var message = err.data;\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'System.Exception: Invalid Credentials'\r\n      ) > -1\r\n    ) {\r\n      message = 'Sign In failed. Invalid Credentials.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete aborted. Duration unit in use'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete aborted. Duration unit in use.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete failed. User contains comments'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete failed. User contains comments.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete failed. User contains tasks'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete failed. User contains tasks.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete failed. Department contains users'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete failed. Department contains users.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'System.Exception: Email does not exist'\r\n      ) > -1\r\n    ) {\r\n      message = 'Sign In failed. Email does not exist.';\r\n    }\r\n\r\n    if (\r\n      err.data.message.indexOf(\r\n        'System.Exception: Email and password are required'\r\n      ) > -1\r\n    ) {\r\n      message =\r\n        'Sign In failed. Email and password are required.';\r\n    }\r\n\r\n    // if (err.data.indexOf('FK_SubTask_Task_TaskId') > -1) {\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete aborted! Task contains sub tasks'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete aborted. Task contains sub tasks.';\r\n    }\r\n\r\n    // if (err.data.indexOf('FK_TaskComment_Task_TaskId') > -1) {\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete aborted! Task contains comments'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete aborted. Task contains comments.';\r\n    }\r\n\r\n    // if (err.data.indexOf('FK_Task_Project_ProjectId') > -1) {\r\n    if (\r\n      err.data.message.indexOf(\r\n        'Delete failed. Project contains tasks'\r\n      ) > -1\r\n    ) {\r\n      message = 'Delete aborted. Project contains tasks.';\r\n    }\r\n  } else {\r\n    message = err.message;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className='alert alert-danger alert-dismissible fade show shadow-sm'\r\n        role='alert'\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <strong>Error!</strong> {message}\r\n        <button\r\n          type='button'\r\n          className='close'\r\n          data-dismiss='alert'\r\n          aria-label='Close'\r\n        >\r\n          <span aria-hidden='true'>&times;</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorCmp.propTypes = {\r\n  err: PropTypes.object\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getValidatedUserInfo } from '../../shared/shared';\r\nimport {\r\n  fetchStates,\r\n  fetchPriorities,\r\n  setUserBySession,\r\n  fetchComputeDurations,\r\n  getDefaultComputedDurationById\r\n} from '../../state/actions/general-action';\r\nimport {\r\n  insertProject,\r\n  updateProject,\r\n  setSelectedProject\r\n} from '../../state/actions/project-action';\r\nimport './project.css';\r\nimport ErrorCmp from '../error/error';\r\n\r\nexport default function ProjectForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const curProject = useSelector(\r\n    (state) => state.projectState.selectedProject\r\n  );\r\n  const states = useSelector(\r\n    (state) => state.generalState.states\r\n  );\r\n  const priorities = useSelector(\r\n    (state) => state.generalState.priorities\r\n  );\r\n  const computeDurationUnits = useSelector(\r\n    (state) => state.generalState.computeDurations\r\n  );\r\n  const [projectForm, setProjectForm] =\r\n    useState(curProject);\r\n  const result = useSelector(\r\n    (state) =>\r\n      Number.parseFloat(projectForm.duration) *\r\n      Number.parseFloat(\r\n        state.generalState.defaultComputedDuration.factor\r\n      )\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.projectState.error\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n\r\n      dispatch(fetchStates()).then(() =>\r\n        dispatch(fetchPriorities()).then(() =>\r\n          dispatch(fetchComputeDurations()).then(() =>\r\n            projectForm._id === 0\r\n              ? dispatch(\r\n                  getDefaultComputedDurationById(\r\n                    '61121d2e3cd3f7eeb6047e32'\r\n                  )\r\n                )\r\n              : dispatch(\r\n                  getDefaultComputedDurationById(\r\n                    projectForm.durationUnit\r\n                  )\r\n                )\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleOnStartDateChange = (date) => {\r\n    setProjectForm({\r\n      ...projectForm,\r\n      deadline: new Date(date)\r\n    });\r\n  };\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedProject({\r\n        _id: 0,\r\n        projectName: '',\r\n        description: '',\r\n        duration: 0,\r\n        computedDuration: 0,\r\n        durationUnit: 0,\r\n        deadline: new Date(),\r\n        isEnabled: true,\r\n        state: '',\r\n        priority: '',\r\n        tasks: [],\r\n        createdBy: null,\r\n        updatedAt: null,\r\n        updatedBy: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    // set the selected computed unit duration as default computed unit in general state\r\n    if (e.target.name === 'durationUnit') {\r\n      dispatch(\r\n        getDefaultComputedDurationById(e.target.value)\r\n      );\r\n    }\r\n\r\n    setProjectForm({\r\n      ...projectForm,\r\n      [e.target.name]:\r\n        e.target.name === 'duration'\r\n          ? e.target.value === ''\r\n            ? '0'\r\n            : e.target.value\r\n          : typeof e.target.value === 'number'\r\n          ? e.target.value\r\n          : e.target.value.trim()\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    projectForm.computedDuration =\r\n      Number.parseFloat(result);\r\n\r\n    if (projectForm._id === 0) {\r\n      // INSERT\r\n      projectForm._id = null;\r\n      projectForm.createdBy = stateLogin.id;\r\n      dispatch(insertProject(history, projectForm));\r\n    } else {\r\n      // UPDATE\r\n      projectForm.updatedBy = stateLogin.id;\r\n      projectForm.updatedAt = new Date();\r\n      dispatch(updateProject(history, projectForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          Project Form\r\n          <div className='float-right'>\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>ID:</span>\r\n            &nbsp;{projectForm._id}\r\n          </div>\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-6'>\r\n                <label htmlFor='projectName'>Name*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='projectName'\r\n                  name='projectName'\r\n                  value={projectForm.projectName}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='projectName'>\r\n                  Duration*\r\n                </label>\r\n                <input\r\n                  type='number'\r\n                  className='form-control form-control-sm'\r\n                  id='duration'\r\n                  name='duration'\r\n                  value={Number.parseFloat(\r\n                    projectForm.duration\r\n                  )}\r\n                  onChange={handleOnChange}\r\n                  min='0'\r\n                  step='.01'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='durationUnit'>\r\n                  DurationUnit\r\n                </label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='durationUnit'\r\n                  name='durationUnit'\r\n                  value={projectForm.durationUnit}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='none' value=''>\r\n                    ---\r\n                  </option>\r\n                  {computeDurationUnits &&\r\n                    computeDurationUnits.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.code}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='computedDuration'>\r\n                  Duration (Hours)\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='computedDuration'\r\n                  name='computedDuration'\r\n                  value={\r\n                    Number.parseFloat(result).toFixed(2) ||\r\n                    Number.parseFloat(\r\n                      projectForm.computedDuration\r\n                    ).toFixed(2)\r\n                  }\r\n                  onChange={handleOnChange}\r\n                  placeholder='0'\r\n                  readOnly\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='deadline'>Deadline</label>\r\n                <DatePicker\r\n                  id='deadline'\r\n                  name='deadline'\r\n                  className='form-control form-control-sm'\r\n                  key='deadline'\r\n                  dateFormat='dd/MM/yyyy'\r\n                  selected={\r\n                    projectForm.deadline != null\r\n                      ? new Date(projectForm.deadline)\r\n                      : new Date()\r\n                  }\r\n                  value={\r\n                    projectForm.deadline != null\r\n                      ? new Date(projectForm.deadline)\r\n                      : new Date()\r\n                  }\r\n                  onChange={(date) =>\r\n                    handleOnStartDateChange(date)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='priority'>Priority</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='priority'\r\n                  name='priority'\r\n                  value={projectForm.priority}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='none' value=''>\r\n                    ---\r\n                  </option>\r\n                  {priorities &&\r\n                    priorities.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='state'>State</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='state'\r\n                  name='state'\r\n                  value={projectForm.state}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='none' value=''>\r\n                    ---\r\n                  </option>\r\n                  {states &&\r\n                    states.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.stateName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='description'>\r\n                Description*\r\n              </label>\r\n              <textarea\r\n                className='form-control form-control-sm'\r\n                id='description'\r\n                name='description'\r\n                value={projectForm.description}\r\n                onChange={handleOnChange}\r\n                rows='4'\r\n                maxLength='255'\r\n                style={{ resize: 'none' }}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  const length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left\r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      const leftItemCount = 3 + 2 * siblingCount;\r\n      const leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      const rightItemCount = 3 + 2 * siblingCount;\r\n      const rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};\r\n","// https://github.com/mayankshubham/react-pagination/tree/master/src/examples\r\n\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { usePagination, DOTS } from './usePagination';\r\nimport './pagination.scss';\r\n\r\nconst Pagination = props => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  const lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <>\r\n    <hr/>\r\n    <ul\r\n      className={classnames('pagination-container', { [className]: className })}\r\n    >\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1\r\n        })}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map(pageNumber => {\r\n        if (pageNumber === DOTS) {\r\n          return <li className=\"pagination-item dots\">&#8230;</li>;\r\n        }\r\n\r\n        return (\r\n          <li key={pageNumber}\r\n            className={classnames('pagination-item', {\r\n              selected: pageNumber === currentPage\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func,\r\n  className: PropTypes.string,\r\n  totalCount: PropTypes.number,\r\n  siblingCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  pageSize: PropTypes.number\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport el from 'date-fns/locale/el'; // the locale you want\r\nimport DatePicker, {\r\n  registerLocale\r\n} from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport Pagination from '../../shared/pagination/Pagination';\r\nimport {\r\n  prepareFilterDateAndSend,\r\n  fixDate,\r\n  getPageSize,\r\n  getValidatedUserInfo\r\n} from '../../shared/shared';\r\nimport {\r\n  fetchComputeDurations,\r\n  fetchPriorities,\r\n  fetchStates,\r\n  setUserBySession\r\n} from '../../state/actions/general-action';\r\nimport {\r\n  fetchProjectsByUser,\r\n  setProjectFilters,\r\n  setSelectedProject,\r\n  deleteProject\r\n} from '../../state/actions/project-action';\r\nimport { fetchUsers } from '../../state/actions/user-action';\r\nimport './project.css';\r\nimport ErrorCmp from '../error/error';\r\n\r\nconst override = css`\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n  border-color: red;\r\n  width: 44px;\r\n  float: right;\r\n`;\r\n\r\nexport default function ProjectList() {\r\n  registerLocale('el', el); // register it with the name you want\r\n  const pageSize = getPageSize();\r\n  const dispatch = useDispatch();\r\n  const filters = useSelector(\r\n    (state) => state.projectState.filters\r\n  );\r\n  const projects = useSelector((state) =>\r\n    state.projectState.projects.filter((item) => {\r\n      return (\r\n        (filters.name.toLowerCase() === '' ||\r\n          item.projectName\r\n            .toLowerCase()\r\n            .includes(filters.name.toLowerCase())) &&\r\n        (filters.description.toLowerCase() === '' ||\r\n          item.description\r\n            .toLowerCase()\r\n            .includes(filters.description.toLowerCase())) &&\r\n        (Number.parseInt(filters.duration) === 0 ||\r\n          Number.parseInt(item.duration) ===\r\n            Number.parseInt(filters.duration)) &&\r\n        (filters.priority === '0' ||\r\n          item.priority === filters.priority) &&\r\n        (filters.state === '0' ||\r\n          item.state === filters.state) &&\r\n        (filters.createdFrom === '' ||\r\n          new Date(filters.createdFrom) <=\r\n            new Date(item.createdAt)) &&\r\n        (filters.createdTo === '' ||\r\n          new Date(filters.createdTo) >=\r\n            new Date(item.createdAt)) &&\r\n        (filters.deadlineFrom === '' ||\r\n          new Date(filters.deadlineFrom) <=\r\n            new Date(item.deadline)) &&\r\n        (filters.deadlineTo === '' ||\r\n          new Date(filters.deadlineTo) >=\r\n            new Date(item.deadline))\r\n      );\r\n    })\r\n  );\r\n  const users = useSelector(\r\n    (state) => state.userState.users\r\n  );\r\n  const priorities = useSelector(\r\n    (state) => state.generalState.priorities\r\n  );\r\n  const states = useSelector(\r\n    (state) => state.generalState.states\r\n  );\r\n  const role = useSelector(\r\n    (state) =>\r\n      state.generalState.login &&\r\n      state.generalState.login.role\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.projectState.error\r\n  );\r\n  const computeDurationUnits = useSelector(\r\n    (state) => state.generalState.computeDurations\r\n  );\r\n  const isLoading = useSelector(\r\n    (state) => state.projectState.isLoading\r\n  );\r\n  // const stateLogin = useSelector((state) => state.generalState.login);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n\r\n      var curSelectedMonthFrom = `${\r\n        new Date().getMonth() + 1\r\n      }|${new Date().getFullYear()}`;\r\n      var curSelectedMonthTo = `${\r\n        new Date().getMonth() + 1\r\n      }|${new Date().getFullYear()}`;\r\n\r\n      // fetch helpers\r\n      dispatch(fetchComputeDurations()).then(() =>\r\n        dispatch(fetchPriorities()).then(() =>\r\n          dispatch(fetchStates()).then(() =>\r\n            dispatch(fetchUsers())\r\n              .then(() =>\r\n                dispatch(\r\n                  // fetch projects\r\n                  fetchProjectsByUser(\r\n                    filters.selectedUser === 0\r\n                      ? userInfo.id\r\n                      : filters.selectedUser,\r\n                    filters.selectedMonthFrom === 0\r\n                      ? curSelectedMonthFrom\r\n                      : prepareFilterDateAndSend(\r\n                          filters.selectedMonthFrom\r\n                        ),\r\n                    filters.selectedMonthTo === 0\r\n                      ? curSelectedMonthTo\r\n                      : prepareFilterDateAndSend(\r\n                          filters.selectedMonthTo\r\n                        )\r\n                  )\r\n                )\r\n              )\r\n              // set project filters\r\n              .then(() =>\r\n                dispatch(\r\n                  setProjectFilters({\r\n                    ...filters,\r\n                    selectedUser:\r\n                      filters.selectedUser === 0\r\n                        ? userInfo.id\r\n                        : filters.selectedUser,\r\n                    selectedMonthFrom:\r\n                      filters.selectedMonthFrom === 0\r\n                        ? new Date()\r\n                        : filters.selectedMonthFrom,\r\n                    selectedMonthTo:\r\n                      filters.selectedMonthTo === 0\r\n                        ? new Date()\r\n                        : filters.selectedMonthTo\r\n                  })\r\n                )\r\n              )\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // go from page 1\r\n    setCurrentPage(1);\r\n  }, [filters]);\r\n\r\n  const handleEditBtn = (project) => {\r\n    dispatch(setSelectedProject(project));\r\n    history.push('/add');\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      dispatch(deleteProject(id));\r\n    }\r\n  };\r\n\r\n  const handleUserOnChange = (e) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        selectedUser: e.target.value\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchProjectsByUser(\r\n        e.target.value,\r\n        prepareFilterDateAndSend(filters.selectedMonthFrom),\r\n        prepareFilterDateAndSend(filters.selectedMonthTo)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleMonthFromOnChange = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        selectedMonthFrom: date\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchProjectsByUser(\r\n        filters.selectedUser,\r\n        prepareFilterDateAndSend(date),\r\n        prepareFilterDateAndSend(filters.selectedMonthTo)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleMonthToOnChange = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        selectedMonthTo: date\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchProjectsByUser(\r\n        filters.selectedUser,\r\n        prepareFilterDateAndSend(filters.selectedMonthFrom),\r\n        prepareFilterDateAndSend(date)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleResetFilters = () => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        createdFrom: '',\r\n        createdTo: '',\r\n        name: '',\r\n        description: '',\r\n        duration: 0,\r\n        deadlineFrom: '',\r\n        deadlineTo: '',\r\n        priority: '0',\r\n        state: '0',\r\n        selectedUser: filters.selectedUser,\r\n        selectedMonthFrom: filters.selectedMonthFrom,\r\n        selectedMonthTo: filters.selectedMonthTo\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersOnChacge = (e) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        [e.target.name]:\r\n          e.target.name === 'duration'\r\n            ? e.target.value === ''\r\n              ? '0'\r\n              : e.target.value\r\n            : e.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersCreatedFromOnChacge = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        createdFrom: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersCreatedToOnChacge = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        createdTo: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersDeadlineFromOnChacge = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        deadlineFrom: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersDeadlineToOnChacge = (date) => {\r\n    dispatch(\r\n      setProjectFilters({\r\n        ...filters,\r\n        deadlineTo: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const projectsTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return projects.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, projects, filters]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-briefcase'></i> Projects\r\n        </h5>\r\n        <div className='card-body'>\r\n          <Link\r\n            to='/add'\r\n            className={`btn btn-sm btn-primary shadow-sm ${\r\n              role !== 'Administrator' && 'disabled'\r\n            }`}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            <i className='bi bi-plus-lg'></i> New Project\r\n          </Link>\r\n          <ScaleLoader\r\n            color={'#86C02E'}\r\n            loading={isLoading}\r\n            css={override}\r\n            size={150}\r\n          />\r\n          <hr />\r\n          <div className='form-row'>\r\n            <div className='form-group col-md-2'>\r\n              <label htmlFor='projectId'>By User</label>\r\n              <select\r\n                id='userSelect'\r\n                name='userSelect'\r\n                className='form-control form-control-sm'\r\n                onChange={handleUserOnChange}\r\n                value={filters.selectedUser}\r\n              >\r\n                <option key='all' value='0'>\r\n                  Όλα\r\n                </option>\r\n                {users &&\r\n                  users.map((item) => (\r\n                    <option key={item._id} value={item._id}>\r\n                      {item.title} ({item.department.name})\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className='form-group col-lg-2'>\r\n              <label htmlFor='selectedMonthFrom'>\r\n                From Month\r\n              </label>\r\n              <DatePicker\r\n                id='selectedMonthFrom'\r\n                name='selectedMonthFrom'\r\n                className='form-control form-control-sm'\r\n                key='startDate'\r\n                value={\r\n                  filters.selectedMonthFrom === 0\r\n                    ? new Date()\r\n                    : filters.selectedMonthFrom\r\n                }\r\n                selected={\r\n                  filters.selectedMonthFrom === 0\r\n                    ? new Date()\r\n                    : filters.selectedMonthFrom\r\n                }\r\n                onChange={(date) =>\r\n                  handleMonthFromOnChange(date)\r\n                }\r\n                dateFormat='MM/yyyy'\r\n                showMonthYearPicker\r\n              />\r\n            </div>\r\n            <div className='form-group col-lg-2'>\r\n              <label htmlFor='selectedMonthTo'>\r\n                To Month\r\n              </label>\r\n              <DatePicker\r\n                id='selectedMonthTo'\r\n                name='selectedMonthTo'\r\n                className='form-control form-control-sm'\r\n                key='startDate'\r\n                minDate={filters.selectedMonthFrom}\r\n                value={\r\n                  filters.selectedMonthTo === 0\r\n                    ? new Date()\r\n                    : filters.selectedMonthTo\r\n                }\r\n                selected={\r\n                  filters.selectedMonthTo === 0\r\n                    ? new Date()\r\n                    : filters.selectedMonthTo\r\n                }\r\n                onChange={(date) =>\r\n                  handleMonthToOnChange(date)\r\n                }\r\n                dateFormat='MM/yyyy'\r\n                showMonthYearPicker\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className='table-responsive-sm'>\r\n            <table className='table table-sm table-hover'>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>#</th>\r\n                  <th scope='col' colSpan='2'>\r\n                    Created\r\n                  </th>\r\n                  <th scope='col'>Name</th>\r\n                  <th scope='col'>Description</th>\r\n                  <th scope='col'>Duration</th>\r\n                  <th scope='col' colSpan='2'>\r\n                    Deadline\r\n                  </th>\r\n                  <th scope='col'>Priority</th>\r\n                  <th scope='col'>State</th>\r\n                  <th nowrap='true'></th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <button\r\n                      className='btn btn-default btn-sm shadow-sm'\r\n                      onClick={handleResetFilters}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='createdFrom'\r\n                        name='createdFrom'\r\n                        className='form-control form-control-sm'\r\n                        key='createdFrom'\r\n                        locale='el'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        selected={filters.createdFrom}\r\n                        value={filters.createdFrom}\r\n                        aria-describedby='basic-addon1'\r\n                        onChange={(date) =>\r\n                          handleFiltersCreatedFromOnChacge(\r\n                            date\r\n                          )\r\n                        }\r\n                        style={{\r\n                          border: '1px solid #e4e4e4',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon2'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='createdTo'\r\n                        name='createdTo'\r\n                        className='form-control form-control-sm'\r\n                        key='createdTo'\r\n                        locale='el'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        minDate={filters.createdFrom}\r\n                        selected={filters.createdTo}\r\n                        value={filters.createdTo}\r\n                        aria-describedby='basic-addon2'\r\n                        onChange={(date) =>\r\n                          handleFiltersCreatedToOnChacge(\r\n                            date\r\n                          )\r\n                        }\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon4'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        id='name'\r\n                        name='name'\r\n                        value={filters.name}\r\n                        onChange={handleFiltersOnChacge}\r\n                        type='text'\r\n                        className='fomr-control form-control-sm'\r\n                        aria-describedby='basic-addon4'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon3'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        id='description'\r\n                        name='description'\r\n                        value={filters.description}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon4'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='number'\r\n                        id='duration'\r\n                        name='duration'\r\n                        value={filters.duration}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        min='0'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon6'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='deadlineFrom'\r\n                        name='deadlineFrom'\r\n                        className='form-control form-control-sm'\r\n                        key='deadlineFrom'\r\n                        locale='el'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        selected={filters.deadlineFrom}\r\n                        value={filters.deadlineFrom}\r\n                        onChange={(date) =>\r\n                          handleFiltersDeadlineFromOnChacge(\r\n                            date\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon7'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='deadlineTo'\r\n                        name='deadlineTo'\r\n                        className='form-control form-control-sm'\r\n                        key='deadlineTo'\r\n                        locale='el'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        minDate={filters.deadlineFrom}\r\n                        selected={filters.deadlineTo}\r\n                        value={filters.deadlineTo}\r\n                        onChange={(date) =>\r\n                          handleFiltersDeadlineToOnChacge(\r\n                            date\r\n                          )\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon7'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='priority'\r\n                        name='priority'\r\n                        value={filters.priority}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      >\r\n                        <option\r\n                          key={'all'}\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {priorities &&\r\n                          priorities.map((item) => (\r\n                            <option\r\n                              key={item._id}\r\n                              value={item._id}\r\n                            >\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon7'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='state'\r\n                        name='state'\r\n                        value={filters.state}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      >\r\n                        <option\r\n                          key={'all'}\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {states &&\r\n                          states.map((item) => (\r\n                            <option\r\n                              key={item._id}\r\n                              value={item._id}\r\n                            >\r\n                              {item.stateName}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                  <th nowrap='true'></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {projectsTableData.length > 0 &&\r\n                  projectsTableData.map((project, cnt) => (\r\n                    <tr key={project._id}>\r\n                      <td>\r\n                        <b>\r\n                          {currentPage === 1\r\n                            ? cnt + 1\r\n                            : pageSize * (currentPage - 1) +\r\n                              cnt +\r\n                              1}\r\n                        </b>\r\n                      </td>\r\n                      <td colSpan='2'>\r\n                        <i className='bi bi-calendar3'></i>{' '}\r\n                        &nbsp;\r\n                        {fixDate(project.createdAt)}\r\n                      </td>\r\n                      <td>\r\n                        <b>{project.projectName}</b>\r\n                      </td>\r\n                      <td>{project.description}</td>\r\n                      <td className='text-center'>\r\n                        {Number.parseFloat(\r\n                          project.duration\r\n                        ).toFixed(2)}{' '}\r\n                        {computeDurationUnits &&\r\n                          computeDurationUnits.find(\r\n                            (item) => {\r\n                              return (\r\n                                project.durationUnit ===\r\n                                item._id\r\n                              );\r\n                            }\r\n                          ).code}\r\n                      </td>\r\n                      <td colSpan='2'>\r\n                        <i className='bi bi-calendar3'></i>{' '}\r\n                        &nbsp;\r\n                        {fixDate(project.deadline)}\r\n                      </td>\r\n                      <td>\r\n                        <span className='badge bg-warning text-dark shadow-sm'>\r\n                          <b>\r\n                            {\r\n                              priorities.find(\r\n                                (item) =>\r\n                                  item._id ===\r\n                                  project.priority\r\n                              ).name\r\n                            }\r\n                          </b>\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span className='badge bg-warning text-dark shadow-sm'>\r\n                          <b>\r\n                            {\r\n                              states.find(\r\n                                (item) =>\r\n                                  item._id === project.state\r\n                              ).stateName\r\n                            }\r\n                          </b>\r\n                        </span>\r\n                      </td>\r\n                      <td nowrap='true' align='center'>\r\n                        <button\r\n                          className='btn btn-sm btn-primary shadow-sm'\r\n                          onClick={() =>\r\n                            handleEditBtn(project)\r\n                          }\r\n                          disabled={\r\n                            role !== 'Administrator'\r\n                          }\r\n                        >\r\n                          <i className='bi bi-pencil'></i>\r\n                        </button>{' '}\r\n                        <button\r\n                          className='btn btn-sm btn-danger shadow-sm'\r\n                          onClick={() =>\r\n                            handleDeleteBtn(project._id)\r\n                          }\r\n                          disabled={\r\n                            role !== 'Administrator'\r\n                          }\r\n                        >\r\n                          <i className='bi bi-trash'></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              className='pagination-bar'\r\n              currentPage={currentPage}\r\n              totalCount={projects.length}\r\n              pageSize={pageSize}\r\n              onPageChange={(page) => setCurrentPage(page)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getValidatedUserInfo } from '../../../shared/shared';\r\nimport { setUserBySession } from '../../../state/actions/general-action';\r\nimport {\r\n  insertComment,\r\n  updateComment,\r\n  setSelectedComment\r\n} from '../../../state/actions/task-action';\r\nimport './comment.css';\r\nimport ErrorCmp from '../../error/error';\r\n\r\nexport default function CommentForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(\r\n    (state) => state.taskState.error\r\n  );\r\n  const curComment = useSelector(\r\n    (state) => state.taskState.selectedComment\r\n  );\r\n  const curTask = useSelector(\r\n    (state) => state.taskState.taskById\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n\r\n  const [commentForm, setCommentForm] =\r\n    useState(curComment);\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedComment({\r\n        _id: 0,\r\n        description: '',\r\n        task: '',\r\n        user: '',\r\n        isEnabled: true,\r\n        createdBy: null,\r\n        updatedAt: null,\r\n        updatedBy: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setCommentForm({\r\n      ...commentForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(taskForm);\r\n\r\n    if (curComment._id === 0) {\r\n      // INSERT\r\n      // console.log('INSERT');\r\n      commentForm.task = curTask._id; // task id comment belongs.\r\n      commentForm.user = stateLogin.id; // logged in user\r\n      commentForm.createdBy = stateLogin.id; // logged in user\r\n      dispatch(insertComment(history, commentForm));\r\n    } else {\r\n      // UPDATE\r\n      // console.log('UPDATE');\r\n      commentForm.updatedBy = stateLogin.id; // logged in user\r\n      dispatch(updateComment(history, commentForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-chat-right-text'></i> Comment\r\n          Form\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-12'>\r\n                <label htmlFor='description'>\r\n                  Comment*\r\n                </label>\r\n                <textarea\r\n                  className='form-control form-control-sm'\r\n                  id='description'\r\n                  name='description'\r\n                  value={commentForm.description}\r\n                  onChange={handleOnChange}\r\n                  rows='4'\r\n                  maxLength='255'\r\n                  style={{ resize: 'none' }}\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getValidatedUserInfo } from '../../../shared/shared';\r\nimport {\r\n  fetchComputeDurations,\r\n  getDefaultComputedDurationById,\r\n  setUserBySession\r\n} from '../../../state/actions/general-action';\r\nimport {\r\n  insertSubTask,\r\n  setSelectedSubTask,\r\n  updateSubTask\r\n} from '../../../state/actions/task-action';\r\nimport './subtask.css';\r\nimport ErrorCmp from '../../error/error';\r\n\r\nexport default function SubTaskForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(\r\n    (state) => state.taskState.error\r\n  );\r\n  const curSubTask = useSelector(\r\n    (state) => state.taskState.selectedSubTask\r\n  );\r\n  const curTask = useSelector(\r\n    (state) => state.taskState.taskById\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const computeDurations = useSelector(\r\n    (state) => state.generalState.computeDurations\r\n  );\r\n\r\n  const [subTaskForm, setSubTaskForm] =\r\n    useState(curSubTask);\r\n  const result = useSelector(\r\n    (state) =>\r\n      Number.parseFloat(subTaskForm.duration) *\r\n      Number.parseFloat(\r\n        state.generalState.defaultComputedDuration.factor\r\n      )\r\n  );\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n      dispatch(fetchComputeDurations()).then(() =>\r\n        curSubTask._id === 0\r\n          ? dispatch(\r\n              getDefaultComputedDurationById(\r\n                '61121d2e3cd3f7eeb6047e32'\r\n              )\r\n            )\r\n          : dispatch(\r\n              getDefaultComputedDurationById(\r\n                subTaskForm.durationUnit\r\n              )\r\n            )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedSubTask({\r\n        _id: 0,\r\n        subTaskName: '',\r\n        description: '',\r\n        startDate: new Date(),\r\n        startTime: null,\r\n        duration: 0,\r\n        computedDuration: 0,\r\n        durationUnit: 0,\r\n        task: null,\r\n        guid: '',\r\n        isEnabled: true,\r\n        createdBy: null,\r\n        updatedAt: null,\r\n        updatedBy: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    // set the selected computed unit duration as default computed unit in general state\r\n    if (e.target.name === 'durationUnit') {\r\n      dispatch(\r\n        getDefaultComputedDurationById(e.target.value)\r\n      );\r\n    }\r\n\r\n    setSubTaskForm({\r\n      ...subTaskForm,\r\n      [e.target.name]:\r\n        e.target.name === 'duration'\r\n          ? e.target.value === ''\r\n            ? 0\r\n            : e.target.value\r\n          : typeof e.target.value === 'number'\r\n          ? e.target.value\r\n          : e.target.value.trim()\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    subTaskForm.computedDuration =\r\n      Number.parseFloat(result);\r\n\r\n    // console.log(subTaskForm);\r\n\r\n    if (subTaskForm._id === 0) {\r\n      // INSERT\r\n      subTaskForm.guid = uuidv4();\r\n      subTaskForm.task = curTask._id; // task id comment belongs.\r\n      subTaskForm.createdBy = stateLogin.id; // logged in user\r\n      dispatch(insertSubTask(history, subTaskForm));\r\n    } else {\r\n      // UPDATE\r\n      subTaskForm.updatedBy = stateLogin.id; // logged in user\r\n      dispatch(updateSubTask(history, subTaskForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  const handleOnStartDateChange = (date) => {\r\n    setSubTaskForm({\r\n      ...subTaskForm,\r\n      startDate: new Date(date).toDateString()\r\n    });\r\n  };\r\n\r\n  const handleOnStartTimeChange = (time) => {\r\n    setSubTaskForm({\r\n      ...subTaskForm,\r\n      startTime: time.toLocaleString('en-US')\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-chat-right-text'></i> Sub task\r\n          Form\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='subTaskName'>Name*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='subTaskName'\r\n                  name='subTaskName'\r\n                  value={subTaskForm.subTaskName}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='startDate'>\r\n                  Start Date\r\n                </label>\r\n                <DatePicker\r\n                  id='startDate'\r\n                  name='startDate'\r\n                  className='form-control form-control-sm'\r\n                  key='startDate'\r\n                  minDate={new Date(curTask.startDate)}\r\n                  dateFormat='dd/MM/yyyy'\r\n                  selected={\r\n                    subTaskForm.startDate != null\r\n                      ? new Date(subTaskForm.startDate)\r\n                      : new Date()\r\n                  }\r\n                  value={\r\n                    subTaskForm.startDate != null\r\n                      ? new Date(subTaskForm.startDate)\r\n                      : new Date()\r\n                  }\r\n                  onChange={(date) =>\r\n                    handleOnStartDateChange(date)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='startTime'>\r\n                  Start Time*\r\n                </label>\r\n                <DatePicker\r\n                  id='startTime'\r\n                  name='startTime'\r\n                  className='form-control form-control-sm'\r\n                  key='startTime'\r\n                  dateFormat='HH:mm'\r\n                  selected={\r\n                    subTaskForm.startTime != null\r\n                      ? new Date(subTaskForm.startTime)\r\n                      : ''\r\n                  }\r\n                  value={\r\n                    subTaskForm.startTime != null\r\n                      ? new Date(subTaskForm.startTime)\r\n                      : ''\r\n                  }\r\n                  timeIntervals={30}\r\n                  timeCaption='Time'\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  onChange={(date) =>\r\n                    handleOnStartTimeChange(date)\r\n                  }\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='duration'>Duration*</label>\r\n                <input\r\n                  type='number'\r\n                  className='form-control form-control-sm'\r\n                  id='duration'\r\n                  name='duration'\r\n                  value={Number.parseFloat(\r\n                    subTaskForm.duration\r\n                  )}\r\n                  onChange={handleOnChange}\r\n                  min='0'\r\n                  step='.01'\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='durationUnit'>\r\n                  DurationUnit\r\n                </label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='durationUnit'\r\n                  name='durationUnit'\r\n                  value={subTaskForm.durationUnit}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='none' value=''>\r\n                    ---\r\n                  </option>\r\n                  {computeDurations &&\r\n                    computeDurations.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                        selected='selected'\r\n                      >\r\n                        {item.code}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='computedDuration'>\r\n                  Duration (Hours)\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='computedDuration'\r\n                  name='computedDuration'\r\n                  value={\r\n                    Number.parseFloat(result).toFixed(2) ||\r\n                    Number.parseFloat(\r\n                      subTaskForm.computedDuration\r\n                    ).toFixed(2)\r\n                  }\r\n                  onChange={handleOnChange}\r\n                  placeholder='0'\r\n                  readOnly\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-12'>\r\n                <label htmlFor='description'>\r\n                  Description*\r\n                </label>\r\n                <textarea\r\n                  className='form-control form-control-sm'\r\n                  id='description'\r\n                  name='description'\r\n                  value={subTaskForm.description}\r\n                  onChange={handleOnChange}\r\n                  rows='4'\r\n                  maxLength='255'\r\n                  style={{ resize: 'none' }}\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pagination from '../../../shared/pagination/Pagination';\r\nimport { fixDate } from '../../../shared/shared';\r\nimport {\r\n  fetchTaskById,\r\n  setSelectedComment,\r\n  deleteComment\r\n} from '../../../state/actions/task-action';\r\nimport './comment.css';\r\n\r\nexport default function CommentsTemplate({ comments }) {\r\n  const pageSize = 5;\r\n  const dispatch = useDispatch();\r\n  // const error = useSelector((state) => state.taskState.error);\r\n  const param = useParams().id;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const handleEditBtn = (comment) => {\r\n    dispatch(setSelectedComment(comment));\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      // delete comment and refresh task details state (taskById)\r\n      dispatch(deleteComment(id)).then(() =>\r\n        dispatch(fetchTaskById(param))\r\n      );\r\n    }\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const commentsTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return comments.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, comments]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  return (\r\n    <div className='col-lg-6 col-md-12'>\r\n      <table className='table table-striped shadow-sm'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>#</th>\r\n            <th scope='col'>Created</th>\r\n            <th scope='col'>Comment</th>\r\n            <th scope='col' className='text-center'>\r\n              <Link\r\n                to='/tasks/comments/add'\r\n                title='New Task Comment'\r\n              >\r\n                <i className='bi bi-plus-lg my-icon-form-size'></i>\r\n              </Link>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {commentsTableData.map((cm, i) => (\r\n            <tr key={cm._id}>\r\n              <td>\r\n                <b>\r\n                  {currentPage === 1\r\n                    ? i + 1\r\n                    : pageSize * (currentPage - 1) + i + 1}\r\n                </b>\r\n              </td>\r\n              {/* <td>{cm._id}</td> */}\r\n              <td>\r\n                {fixDate(cm.createdAt)} - {cm.user.title}\r\n              </td>\r\n              <td>{cm.description}</td>\r\n              <td nowrap='true' align='center'>\r\n                <Link\r\n                  to='/tasks/comments/add'\r\n                  onClick={() => handleEditBtn(cm)}\r\n                  title='Edit Task Comment'\r\n                >\r\n                  <i className='bi bi-pencil my-icon-form-size'></i>\r\n                </Link>\r\n                {' | '}\r\n                <Link\r\n                  to='#'\r\n                  onClick={() => handleDeleteBtn(cm._id)}\r\n                  title='Delete Task Comment'\r\n                >\r\n                  <i className='bi bi-trash my-icon-form-size'></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        className='pagination-bar'\r\n        currentPage={currentPage}\r\n        totalCount={comments.length}\r\n        pageSize={pageSize}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCommentsTemplate.propTypes = {\r\n  comments: PropTypes.array\r\n};\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pagination from '../../../shared/pagination/Pagination';\r\nimport { fixDate, fixTime } from '../../../shared/shared';\r\nimport { fetchComputeDurations } from '../../../state/actions/general-action';\r\nimport {\r\n  fetchTaskById,\r\n  setSelectedSubTask,\r\n  deleteSubTask\r\n} from '../../../state/actions/task-action';\r\nimport './subtask.css';\r\nimport { fetchUsers } from '../../../state/actions/user-action';\r\n\r\nexport default function SubTasksTemplate({ subtasks }) {\r\n  const pageSize = 5;\r\n  const dispatch = useDispatch();\r\n  const param = useParams().id;\r\n  const users = useSelector(\r\n    (state) => state.userState.users\r\n  );\r\n  const computeDurationUnits = useSelector(\r\n    (state) => state.generalState.computeDurations\r\n  );\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // fetch helpers\r\n    dispatch(fetchUsers()).then(() =>\r\n      dispatch(fetchComputeDurations())\r\n    );\r\n  }, []);\r\n\r\n  const handleEditBtn = (sbt) => {\r\n    dispatch(setSelectedSubTask(sbt));\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      // delete comment and refresh task details state (taskById)\r\n      dispatch(deleteSubTask(id)).then(() =>\r\n        dispatch(fetchTaskById(param))\r\n      );\r\n    }\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const subTasksTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return subtasks.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, subtasks]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  return (\r\n    <div className='col-lg-6 col-md-12'>\r\n      <table className='table table-striped shadow-sm'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>#</th>\r\n            <th scope='col'>Created</th>\r\n            <th scope='col'>StartAt</th>\r\n            <th scope='col'>StartTime</th>\r\n            <th scope='col'>SubTask</th>\r\n            <th scope='col'>Description</th>\r\n            <th scope='col'>Duration</th>\r\n            <th scope='col' className='text-center'>\r\n              <Link\r\n                to='/tasks/subtasks/add'\r\n                title='New Daily Task'\r\n              >\r\n                <i className='bi bi-plus-lg my-icon-form-size'></i>\r\n              </Link>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {subTasksTableData.map((item, i) => (\r\n            <tr key={item._id}>\r\n              <td>\r\n                <b>\r\n                  {currentPage === 1\r\n                    ? i + 1\r\n                    : pageSize * (currentPage - 1) + i + 1}\r\n                </b>\r\n              </td>\r\n              {/* <td>{item.id}</td> */}\r\n              <td>\r\n                {fixDate(item.createdAt)} -{' '}\r\n                {users &&\r\n                  users.find((item) => {\r\n                    return item._id === item.createdBy;\r\n                  }).title}\r\n              </td>\r\n              <td>{fixDate(item.startDate)}</td>\r\n              <td>\r\n                {item.startTime !== null\r\n                  ? fixTime(new Date(item.startTime))\r\n                  : '---'}\r\n              </td>\r\n              <td>{item.subTaskName}</td>\r\n              <td>{item.description}</td>\r\n              <td className='text-center' nowrap='true'>\r\n                {Number.parseFloat(item.duration).toFixed(\r\n                  2\r\n                )}{' '}\r\n                {computeDurationUnits &&\r\n                  computeDurationUnits.find((data) => {\r\n                    return item.durationUnit === data._id;\r\n                  }).code}\r\n              </td>\r\n              <td nowrap='true' align='center'>\r\n                <Link\r\n                  to='/tasks/subtasks/add'\r\n                  onClick={() => handleEditBtn(item)}\r\n                  title='Edit Daily Task'\r\n                >\r\n                  <i className='bi bi-pencil my-icon-form-size'></i>\r\n                </Link>\r\n                {' | '}\r\n                <Link\r\n                  to='#'\r\n                  onClick={() => handleDeleteBtn(item._id)}\r\n                  title='Delete Daily Task'\r\n                >\r\n                  <i className='bi bi-trash my-icon-form-size'></i>\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        className='pagination-bar'\r\n        currentPage={currentPage}\r\n        totalCount={subtasks.length}\r\n        pageSize={pageSize}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nSubTasksTemplate.propTypes = {\r\n  subtasks: PropTypes.array\r\n};\r\n","import React, { useEffect } from 'react';\r\n// import { css } from '@emotion/react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// import ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport { fixDate } from '../../shared/shared';\r\nimport { fetchComputeDurations } from '../../state/actions/general-action';\r\nimport {\r\n  fetchTaskById,\r\n  setSelectedTask,\r\n  deleteTask\r\n} from '../../state/actions/task-action';\r\nimport { fetchUsers } from '../../state/actions/user-action';\r\nimport ErrorCmp from '../error/error';\r\nimport CommentsTemplate from './comment/comment-list';\r\nimport SubTasksTemplate from './subtask/subtask-list';\r\nimport './task.css';\r\n\r\n// const override = css`\r\n//   display: inline-block;\r\n//   margin-left: 15px;\r\n//   border-color: red;\r\n//   width: 44px;\r\n//   float: right;\r\n// `;\r\n\r\nexport default function TaskList() {\r\n  const dispatch = useDispatch();\r\n  const task = useSelector(\r\n    (state) => state.taskState.taskById\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.taskState.error\r\n  );\r\n  // const isLoading = useSelector((state) => state.taskState.isLoading);\r\n  const role = useSelector(\r\n    (state) => state.generalState.login?.role\r\n  );\r\n  const history = useHistory();\r\n  const param = useParams().id;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers()).then(() =>\r\n      dispatch(fetchComputeDurations()).then(() =>\r\n        dispatch(fetchTaskById(param))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const handleEditBtn = (task) => {\r\n    dispatch(setSelectedTask(task));\r\n    history.push('/tasks/add');\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      dispatch(deleteTask(history, id));\r\n    }\r\n  };\r\n\r\n  const TaskTemplate = ({ task }) => {\r\n    return (\r\n      <>\r\n        <tr>\r\n          {/* <td nowrap='true'>\r\n            <b>{task.id}</b>\r\n          </td> */}\r\n          {/* <td nowrap=\"true\">{task.project.projectName}</td> */}\r\n          <td nowrap='true'>{task?.taskName}</td>\r\n          <td nowrap='true'>{task?.description}</td>\r\n          <td nowrap='true'>\r\n            {fixDate(new Date(task.startDate))}\r\n          </td>\r\n          <td nowrap='true'>\r\n            {task.endDate !== null\r\n              ? new Date(task.endDate).toLocaleDateString(\r\n                  'el'\r\n                )\r\n              : '---'}\r\n          </td>\r\n          <td nowrap='true' className='text-center'>\r\n            {task.duration !== null\r\n              ? Number.parseFloat(task.duration).toFixed(2)\r\n              : 0}{' '}\r\n            Hours\r\n          </td>\r\n          <td nowrap='true'>\r\n            {task.assignedTo.title} (\r\n            {task.assignedTo.position})\r\n          </td>\r\n          <td nowrap='true'>\r\n            <span className='badge bg-warning text-dark shadow-sm'>\r\n              <b>{task.priority.name}</b>\r\n            </span>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <span className='badge bg-warning text-dark shadow-sm'>\r\n              <b>{task.state.stateName}</b>\r\n            </span>\r\n          </td>\r\n          <td nowrap='true' align='center'>\r\n            <button\r\n              className='btn btn-sm btn-primary shadow-sm'\r\n              onClick={() => handleEditBtn(task)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-pencil'></i>\r\n            </button>{' '}\r\n            <button\r\n              className='btn btn-sm btn-danger shadow-sm'\r\n              onClick={() => handleDeleteBtn(task?._id)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-trash'></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan='10' style={{ padding: '15px' }}>\r\n            <div className='row'>\r\n              <SubTasksTemplate subtasks={task.subtasks} />\r\n              <CommentsTemplate comments={task.comments} />\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-clipboard'></i> Task Details\r\n          <div className='float-right'>\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>Project:</span>\r\n            &nbsp;{task?.project?.projectName}\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>Task ID:</span>\r\n            &nbsp;{task?._id}\r\n          </div>\r\n        </h5>\r\n        <div className='card-body overflow-auto'>\r\n          {/* <ScaleLoader\r\n            color={'#86C02E'}\r\n            loading={isLoading}\r\n            css={override}\r\n            size={150}\r\n          /> */}\r\n          <div className='table-responsive'>\r\n            <table border='0' className='table table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  {/* <th nowrap='true' scope='col'>\r\n                    ID\r\n                  </th> */}\r\n                  {/* <th nowrap=\"true\" scope=\"col\">Project</th> */}\r\n                  <th nowrap='true' scope='col'>\r\n                    Name\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Description\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    StartDate\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    EndDate\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Duration\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    AssignedTo\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Priority\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    State\r\n                  </th>\r\n                  <th nowrap='true'></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {task && <TaskTemplate task={task} />}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  task: PropTypes.object,\r\n  comments: PropTypes.array,\r\n  subtasks: PropTypes.array,\r\n  cnt: PropTypes.number\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getValidatedUserInfo } from '../../shared/shared';\r\nimport {\r\n  fetchStates,\r\n  fetchPriorities,\r\n  setUserBySession\r\n} from '../../state/actions/general-action';\r\nimport { fetchProjects } from '../../state/actions/project-action';\r\nimport {\r\n  insertTask,\r\n  updateTask,\r\n  setSelectedTask\r\n} from '../../state/actions/task-action';\r\nimport { fetchUsers } from '../../state/actions/user-action';\r\nimport './task.css';\r\nimport ErrorCmp from '../error/error';\r\n\r\nexport default function TaskForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // get projects for combo box except those that are having done state.\r\n  const projects = useSelector((state) =>\r\n    state.projectState.projects.filter(\r\n      (project) => project.stateId !== 5\r\n    )\r\n  );\r\n  const curTask = useSelector(\r\n    (state) => state.taskState.selectedTask\r\n  );\r\n  const users = useSelector(\r\n    (state) => state.userState.users\r\n  );\r\n  const states = useSelector(\r\n    (state) => state.generalState.states\r\n  );\r\n  const priorities = useSelector(\r\n    (state) => state.generalState.priorities\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.taskState.error\r\n  );\r\n  const [taskForm, setTaskForm] = useState(curTask);\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n\r\n      dispatch(fetchStates()).then(() =>\r\n        dispatch(fetchPriorities()).then(() =>\r\n          dispatch(fetchProjects()).then(() =>\r\n            dispatch(fetchUsers())\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedTask({\r\n        _id: 0,\r\n        taskName: '',\r\n        description: '',\r\n        startDate: new Date(),\r\n        endDate: null,\r\n        duration: 0,\r\n        isEnabled: true,\r\n        state: '',\r\n        priority: '',\r\n        assignedTo: '',\r\n        project: 0,\r\n        createdBy: null,\r\n        updatedAt: null,\r\n        updatedBy: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setTaskForm({\r\n      ...taskForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnStartDateChange = (date) => {\r\n    setTaskForm({\r\n      ...taskForm,\r\n      startDate: new Date(date).toDateString()\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (taskForm._id === 0) {\r\n      // INSERT\r\n      console.log('INSERT');\r\n      taskForm.createdBy = stateLogin.id;\r\n      dispatch(insertTask(history, taskForm));\r\n    } else {\r\n      // UPDATE\r\n      console.log('UPDATE');\r\n      taskForm.updatedBy = stateLogin.id;\r\n      dispatch(updateTask(history, taskForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>Task Form</h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-6'>\r\n                <label htmlFor='project'>Project*</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='project'\r\n                  name='project'\r\n                  value={taskForm.project._id}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='pj' value='' defaultValue>\r\n                    ---\r\n                  </option>\r\n                  {projects &&\r\n                    projects.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.projectName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='startDate'>\r\n                  Start Date\r\n                </label>\r\n                <DatePicker\r\n                  id='startDate'\r\n                  name='startDate'\r\n                  className='form-control form-control-sm'\r\n                  key='startDate'\r\n                  dateFormat='dd/MM/yyyy'\r\n                  selected={\r\n                    taskForm.startDate != null\r\n                      ? new Date(taskForm.startDate)\r\n                      : new Date()\r\n                  }\r\n                  value={\r\n                    taskForm.startDate != null\r\n                      ? new Date(taskForm.startDate)\r\n                      : new Date()\r\n                  }\r\n                  onChange={(date) =>\r\n                    handleOnStartDateChange(date)\r\n                  }\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='assignedTo'>\r\n                  Assigned To*\r\n                </label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='assignedTo'\r\n                  name='assignedTo'\r\n                  value={taskForm.assignedTo._id}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='usr' value='' defaultValue>\r\n                    ---\r\n                  </option>\r\n                  {users &&\r\n                    users.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.title} ({item.department.name}\r\n                        )\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-6'>\r\n                <label htmlFor='taskName'>Name*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='taskName'\r\n                  name='taskName'\r\n                  value={taskForm.taskName}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='priority'>Priority*</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='priority'\r\n                  name='priority'\r\n                  value={taskForm.priority._id}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='' value='' defaultValue>\r\n                    ---\r\n                  </option>\r\n                  {priorities &&\r\n                    priorities.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='state'>State*</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='state'\r\n                  name='state'\r\n                  value={taskForm.state._id}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='' value='' defaultValue>\r\n                    ---\r\n                  </option>\r\n                  {states &&\r\n                    states.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.stateName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-12'>\r\n                <label htmlFor='description'>\r\n                  Description*\r\n                </label>\r\n                <textarea\r\n                  className='form-control form-control-sm'\r\n                  id='description'\r\n                  name='description'\r\n                  value={taskForm.description}\r\n                  onChange={handleOnChange}\r\n                  rows='4'\r\n                  maxLength='255'\r\n                  style={{ resize: 'none' }}\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport Pagination from '../../shared/pagination/Pagination';\r\nimport {\r\n  fixDate,\r\n  getPageSize,\r\n  getValidatedUserInfo\r\n} from '../../shared/shared';\r\nimport { fetchDepartments } from '../../state/actions/department-action';\r\nimport {\r\n  fetchPriorities,\r\n  fetchStates,\r\n  setUserBySession\r\n} from '../../state/actions/general-action';\r\nimport {\r\n  fetchTaskByUser,\r\n  setTaskFilters\r\n} from '../../state/actions/task-action';\r\nimport { fetchUsers } from '../../state/actions/user-action';\r\nimport ErrorCmp from '../error/error';\r\nimport './task.css';\r\n\r\nconst override = css`\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n  border-color: red;\r\n  width: 44px;\r\n  float: right;\r\n`;\r\n\r\nexport default function TaskList() {\r\n  const pageSize = getPageSize();\r\n  const dispatch = useDispatch();\r\n  const filters = useSelector(\r\n    (state) => state.taskState.filters\r\n  );\r\n  const tasks = useSelector((state) =>\r\n    state.taskState.tasks.filter((item) => {\r\n      return (\r\n        (filters.project.toLowerCase() === '' ||\r\n          item.project.projectName\r\n            .toLowerCase()\r\n            .includes(filters.project.toLowerCase())) &&\r\n        (filters.name.toLowerCase() === '' ||\r\n          item.taskName\r\n            .toLowerCase()\r\n            .includes(filters.name.toLowerCase())) &&\r\n        (filters.description.toLowerCase() === '' ||\r\n          item.description\r\n            .toLowerCase()\r\n            .includes(filters.description.toLowerCase())) &&\r\n        (filters.priority === '0' ||\r\n          item.priority._id === filters.priority) &&\r\n        (filters.state === '0' ||\r\n          item.state._id === filters.state) &&\r\n        (Number.parseInt(filters.duration) === 0 ||\r\n          Number.parseInt(item.duration) ===\r\n            Number.parseInt(filters.duration)) &&\r\n        (filters.startDate === '' ||\r\n          fixDate(filters.startDate) ===\r\n            fixDate(item.startDate)) &&\r\n        (filters.endDate === '' ||\r\n          new Date(filters.endDate) ===\r\n            new Date(item.endDate))\r\n      );\r\n    })\r\n  );\r\n  const priorities = useSelector(\r\n    (state) => state.generalState.priorities\r\n  );\r\n  const states = useSelector(\r\n    (state) => state.generalState.states\r\n  );\r\n  const role = useSelector(\r\n    (state) => state.generalState.login?.role\r\n  );\r\n  const users = useSelector(\r\n    (state) => state.userState.users\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.taskState.error\r\n  );\r\n  const isLoading = useSelector(\r\n    (state) => state.taskState.isLoading\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const departments = useSelector(\r\n    (state) => state.departmentState.departments\r\n  );\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n\r\n      dispatch(fetchStates()).then(() =>\r\n        dispatch(fetchPriorities()).then(() =>\r\n          dispatch(fetchDepartments()).then(() =>\r\n            dispatch(fetchUsers()).then(() =>\r\n              // fetch tasks\r\n              dispatch(\r\n                fetchTaskByUser(\r\n                  filters.selectedUser === 0\r\n                    ? userInfo.id\r\n                    : filters.selectedUser,\r\n                  filters.startDateFrom === 0\r\n                    ? new Date().toDateString()\r\n                    : new Date(\r\n                        filters.startDateFrom\r\n                      ).toDateString(),\r\n                  filters.startDateTo === 0\r\n                    ? new Date().toDateString()\r\n                    : new Date(\r\n                        filters.startDateTo\r\n                      ).toDateString()\r\n                )\r\n              )\r\n                // set task filters\r\n                .then(() =>\r\n                  dispatch(\r\n                    setTaskFilters({\r\n                      ...filters,\r\n                      selectedUser:\r\n                        filters.selectedUser === 0\r\n                          ? userInfo.id\r\n                          : filters.selectedUser,\r\n                      startDateFrom:\r\n                        filters.startDateFrom === 0\r\n                          ? new Date()\r\n                          : filters.startDateFrom,\r\n                      startDateTo:\r\n                        filters.startDateTo === 0\r\n                          ? new Date()\r\n                          : filters.startDateTo\r\n                    })\r\n                  )\r\n                )\r\n            )\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // go from page 1\r\n    setCurrentPage(1);\r\n  }, [filters]);\r\n\r\n  const handleResetFilters = () => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        project: '',\r\n        name: '',\r\n        description: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        duration: 0,\r\n        priority: '0',\r\n        state: '0',\r\n        selectedUser: filters.selectedUser,\r\n        startDateFrom: filters.startDateFrom,\r\n        startDateTo: filters.startDateTo\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersOnChacge = (e) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        [e.target.name]:\r\n          e.target.name === 'duration'\r\n            ? e.target.value === ''\r\n              ? '0'\r\n              : e.target.value\r\n            : e.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersStartDateOnChacge = (date) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        startDate: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersEndDateOnChacge = (date) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        endDate: date === null ? '' : date\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersStartDateFromOnChacge = (date) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        startDateFrom: date\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchTaskByUser(\r\n        filters.selectedUser,\r\n        new Date(date).toDateString(),\r\n        new Date(filters.startDateTo).toDateString()\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleFiltersStartDateToOnChacge = (date) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        startDateTo: date\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchTaskByUser(\r\n        filters.selectedUser,\r\n        new Date(filters.startDateFrom).toDateString(),\r\n        new Date(date).toDateString()\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleUserOnChange = (e) => {\r\n    dispatch(\r\n      setTaskFilters({\r\n        ...filters,\r\n        selectedUser: e.target.value\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      fetchTaskByUser(\r\n        e.target.value,\r\n        new Date(filters.startDateFrom).toDateString(),\r\n        new Date(filters.startDateTo).toDateString()\r\n      )\r\n    );\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const tasksTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return tasks.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, tasks, filters]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  const TaskTemplate = ({ task, cnt }) => {\r\n    // console.log(task);\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td>\r\n            <b>\r\n              {currentPage === 1\r\n                ? cnt + 1\r\n                : pageSize * (currentPage - 1) + cnt + 1}\r\n            </b>\r\n          </td>\r\n          <td>\r\n            <b>{task.project.projectName}</b>\r\n          </td>\r\n          <td>{task.taskName}</td>\r\n          <td>{task.description}</td>\r\n          <td>\r\n            <i className='bi bi-calendar3'></i> &nbsp;\r\n            {fixDate(new Date(task.startDate))}\r\n          </td>\r\n          <td>\r\n            <i className='bi bi-calendar3'></i> &nbsp;\r\n            {task.endDate !== null\r\n              ? fixDate(new Date(task.endDate))\r\n              : '---'}\r\n          </td>\r\n          <td className='text-center' nowrap='true'>\r\n            {task.duration !== null\r\n              ? Number.parseFloat(task.duration).toFixed(2)\r\n              : 0}{' '}\r\n            Hours\r\n          </td>\r\n          <td className='text-center'>\r\n            {task.assignedTo.title} (\r\n            {departments &&\r\n              departments.find(\r\n                (item) =>\r\n                  item._id === task.assignedTo.department\r\n              ).name}\r\n            )\r\n          </td>\r\n          <td>\r\n            <span className='badge bg-warning text-dark'>\r\n              <b>{task.priority.name}</b>\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <span className='badge bg-warning text-dark'>\r\n              <b>{task.state.stateName}</b>\r\n            </span>\r\n          </td>\r\n          <td align='center'>\r\n            <Link\r\n              className='btn btn-sm btn-primary shadow-sm'\r\n              to={`/tasks/details/${task._id}`}\r\n            >\r\n              <i className='bi bi-clipboard'></i> Details\r\n            </Link>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-list-task'></i> Tasks\r\n        </h5>\r\n        <div className='card-body overflow-auto'>\r\n          <Link\r\n            to='/tasks/add'\r\n            className={`btn btn-sm btn-primary shadow-sm ${\r\n              role !== 'Administrator' && 'disabled'\r\n            }`}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            <i className='bi bi-plus-lg'></i> New Task\r\n          </Link>\r\n          <ScaleLoader\r\n            color={'#86C02E'}\r\n            loading={isLoading}\r\n            css={override}\r\n            size={150}\r\n          />\r\n          <hr />\r\n          <div className='form-row'>\r\n            <div className='form-group col-md-2'>\r\n              <label htmlFor='projectId'>By User</label>\r\n              {stateLogin && (\r\n                <select\r\n                  id='userSelect'\r\n                  name='userSelect'\r\n                  className='form-control form-control-sm'\r\n                  onChange={handleUserOnChange}\r\n                  value={filters.selectedUser}\r\n                >\r\n                  <option key='all' value='0'>\r\n                    Όλα\r\n                  </option>\r\n                  {users &&\r\n                    users.map((item) => (\r\n                      <option\r\n                        key={item._id}\r\n                        value={item._id}\r\n                      >\r\n                        {item.title} ({item.department.name}\r\n                        )\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              )}\r\n            </div>\r\n            <div className='form-group col-md-2'>\r\n              <label htmlFor='startDateFrom'>\r\n                From StartDate\r\n              </label>\r\n              <DatePicker\r\n                id='startDateFrom'\r\n                name='startDateFrom'\r\n                className='form-control form-control-sm'\r\n                key='startDateFrom'\r\n                dateFormat='dd/MM/yyyy'\r\n                selected={filters.startDateFrom}\r\n                value={filters.startDateFrom}\r\n                onChange={(date) =>\r\n                  handleFiltersStartDateFromOnChacge(date)\r\n                }\r\n                aria-describedby='basic-addon4'\r\n                style={{\r\n                  border: '1px solid #cdcdcd',\r\n                  width: '100%'\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='form-group col-md-2'>\r\n              <label htmlFor='startDateTo'>\r\n                To StartDate\r\n              </label>\r\n              <DatePicker\r\n                id='startDateTo'\r\n                name='startDateTo'\r\n                className='form-control form-control-sm'\r\n                key='startDateTo'\r\n                dateFormat='dd/MM/yyyy'\r\n                minDate={filters.startDateFrom}\r\n                selected={filters.startDateTo}\r\n                value={filters.startDateTo}\r\n                onChange={(date) =>\r\n                  handleFiltersStartDateToOnChacge(date)\r\n                }\r\n                aria-describedby='basic-addon4'\r\n                style={{\r\n                  border: '1px solid #cdcdcd',\r\n                  width: '100%'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className='table-responsive-sm'>\r\n            <table className='table table-sm table-hover'>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>ID</th>\r\n                  <th scope='col'>Project</th>\r\n                  <th scope='col'>Name</th>\r\n                  <th scope='col'>Description</th>\r\n                  <th scope='col'>StartDate</th>\r\n                  <th scope='col'>EndDate</th>\r\n                  <th scope='col'>Duration</th>\r\n                  <th scope='col'>AssignedTo</th>\r\n                  <th scope='col'>Priority</th>\r\n                  <th scope='col'>State</th>\r\n                  <th></th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <button\r\n                      className='btn btn-default btn-sm shadow-sm'\r\n                      onClick={handleResetFilters}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        id='project'\r\n                        name='project'\r\n                        value={filters.project}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        aria-describedby='basic-addon1'\r\n                        style={{\r\n                          border: '1px solid #e4e4e4',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon2'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        value={filters.name}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        aria-describedby='basic-addon2'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon3'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        id='description'\r\n                        name='description'\r\n                        value={filters.description}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        aria-describedby='basic-addon3'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon4'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='startDate'\r\n                        name='startDate'\r\n                        className='form-control form-control-sm'\r\n                        key='startDate'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        selected={filters.startDate}\r\n                        value={filters.startDate}\r\n                        onChange={(date) =>\r\n                          handleFiltersStartDateOnChacge(\r\n                            date\r\n                          )\r\n                        }\r\n                        aria-describedby='basic-addon4'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon5'\r\n                        >\r\n                          <i className='bi bi-calendar3'></i>\r\n                        </span>\r\n                      </div>\r\n                      <DatePicker\r\n                        id='endDate'\r\n                        name='endDate'\r\n                        className='form-control form-control-sm'\r\n                        key='endDate'\r\n                        dateFormat='dd/MM/yyyy'\r\n                        selected={filters.endDate}\r\n                        value={filters.endDate}\r\n                        onChange={(date) =>\r\n                          handleFiltersEndDateOnChacge(date)\r\n                        }\r\n                        aria-describedby='basic-addon5'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon4'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='number'\r\n                        id='duration'\r\n                        name='duration'\r\n                        value={filters.duration}\r\n                        onChange={handleFiltersOnChacge}\r\n                        className='fomr-control form-control-sm'\r\n                        min='0'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th></th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon7'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='priority'\r\n                        name='priority'\r\n                        value={filters.priority}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      >\r\n                        <option\r\n                          key={'all'}\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {priorities &&\r\n                          priorities.map((item) => (\r\n                            <option\r\n                              key={item._id}\r\n                              value={item._id}\r\n                            >\r\n                              {item.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon7'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='state'\r\n                        name='state'\r\n                        value={filters.state}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      >\r\n                        <option\r\n                          key={'all'}\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {states &&\r\n                          states.map((item) => (\r\n                            <option\r\n                              key={item._id}\r\n                              value={item._id}\r\n                            >\r\n                              {item.stateName}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksTableData.length > 0 &&\r\n                  tasksTableData.map((task, i) => (\r\n                    <TaskTemplate\r\n                      key={task._id}\r\n                      task={task}\r\n                      cnt={i}\r\n                    />\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              className='pagination-bar'\r\n              currentPage={currentPage}\r\n              totalCount={tasks.length}\r\n              pageSize={pageSize}\r\n              onPageChange={(page) => setCurrentPage(page)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  task: PropTypes.object,\r\n  cnt: PropTypes.number\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './user.css';\r\nimport { getValidatedUserInfo } from '../../shared/shared';\r\nimport { fetchDepartments } from '../../state/actions/department-action';\r\nimport { setUserBySession } from '../../state/actions/general-action';\r\nimport {\r\n  fetchRoles,\r\n  insertUser,\r\n  updateUser,\r\n  setSelectedUser\r\n} from '../../state/actions/user-action';\r\nimport ErrorCmp from '../error/error';\r\n\r\nexport default function UserForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const curUser = useSelector(\r\n    (state) => state.userState.selectedUser\r\n  );\r\n  const roles = useSelector(\r\n    (state) => state.userState.roles\r\n  );\r\n  const departments = useSelector(\r\n    (state) => state.departmentState.departments\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.userState.error\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const [userForm, setUserForm] = useState(curUser);\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n\r\n      dispatch(fetchRoles()).then(() =>\r\n        dispatch(fetchDepartments())\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedUser({\r\n        _id: 0,\r\n        username: '',\r\n        password: '',\r\n        position: '',\r\n        department: '',\r\n        email: '',\r\n        telephone: '',\r\n        mobile: '',\r\n        internalPhone: '',\r\n        title: '',\r\n        isEnabled: true,\r\n        role: '',\r\n        createdBy: null,\r\n        updatedBy: null,\r\n        updatedAt: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setUserForm({\r\n      ...userForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userForm._id === 0) {\r\n      // INSERT\r\n      userForm.createdBy = stateLogin.id;\r\n      dispatch(insertUser(history, userForm));\r\n    } else {\r\n      // UPDATE\r\n      userForm.updatedBy = stateLogin.id;\r\n      dispatch(updateUser(history, userForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          User Form\r\n          <div className='float-right'>\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>ID:</span>\r\n            &nbsp;{userForm._id}\r\n          </div>\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='department'>\r\n                  Department*\r\n                </label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='department'\r\n                  name='department'\r\n                  value={\r\n                    userForm._id === 0\r\n                      ? userForm.department\r\n                      : userForm.department._id\r\n                  }\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='pj' value=''>\r\n                    ---\r\n                  </option>\r\n                  {departments &&\r\n                    departments.map((dprt) => (\r\n                      <option\r\n                        key={dprt._id}\r\n                        value={dprt._id}\r\n                      >\r\n                        {dprt.name}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='position'>Position*</label>\r\n                <input\r\n                  type='mail'\r\n                  className='form-control form-control-sm'\r\n                  id='position'\r\n                  name='position'\r\n                  value={userForm.position}\r\n                  onChange={handleOnChange}\r\n                  maxLength='100'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='title'>Title*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='title'\r\n                  name='title'\r\n                  value={userForm.title}\r\n                  onChange={handleOnChange}\r\n                  maxLength='100'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='role'>Role*</label>\r\n                <select\r\n                  className='form-control form-control-sm'\r\n                  id='role'\r\n                  name='role'\r\n                  value={\r\n                    userForm._id === 0\r\n                      ? userForm.role\r\n                      : userForm.role._id\r\n                  }\r\n                  onChange={handleOnChange}\r\n                  required\r\n                >\r\n                  <option key='0' value=''>\r\n                    ---\r\n                  </option>\r\n                  {roles &&\r\n                    roles.map((role) => (\r\n                      <option\r\n                        key={role._id}\r\n                        value={role._id}\r\n                      >\r\n                        {role.role}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='email'>Email*</label>\r\n                <input\r\n                  type='mail'\r\n                  className='form-control form-control-sm'\r\n                  id='email'\r\n                  name='email'\r\n                  value={userForm.email}\r\n                  onChange={handleOnChange}\r\n                  maxLength='250'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='telephone'>Telephone</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='telephone'\r\n                  name='telephone'\r\n                  value={userForm.telephone}\r\n                  onChange={handleOnChange}\r\n                  maxLength='15'\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='mobile'>Mobile</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='mobile'\r\n                  name='mobile'\r\n                  value={userForm.mobile}\r\n                  onChange={handleOnChange}\r\n                  maxLength='15'\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='internalPhone'>\r\n                  InternalPhone\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='internalPhone'\r\n                  name='internalPhone'\r\n                  value={userForm.internalPhone}\r\n                  onChange={handleOnChange}\r\n                  maxLength='10'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='username'>Username*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='username'\r\n                  name='username'\r\n                  value={userForm.username}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='password'>Password*</label>\r\n                <input\r\n                  type='password'\r\n                  className='form-control form-control-sm'\r\n                  id='password'\r\n                  name='password'\r\n                  value={userForm.password}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport Pagination from '../../shared/pagination/Pagination';\r\nimport {\r\n  fixDate,\r\n  getPageSize,\r\n  getValidatedUserInfo\r\n} from '../../shared/shared';\r\nimport { fetchDepartments } from '../../state/actions/department-action';\r\nimport { setUserBySession } from '../../state/actions/general-action';\r\nimport {\r\n  fetchUsers,\r\n  deleteUser,\r\n  setSelectedUser,\r\n  fetchRoles,\r\n  setUserFilters\r\n} from '../../state/actions/user-action';\r\nimport ErrorCmp from '../error/error';\r\nimport './user.css';\r\n\r\nconst override = css`\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n  border-color: red;\r\n  width: 44px;\r\n  float: right;\r\n`;\r\n\r\nexport default function UserList() {\r\n  const pageSize = getPageSize();\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(\r\n    (state) => state.userState.error\r\n  );\r\n  const filters = useSelector(\r\n    (state) => state.userState.filters\r\n  );\r\n  const users = useSelector((state) =>\r\n    state.userState.users.filter((item) => {\r\n      return (\r\n        (filters.title.toLowerCase() === '' ||\r\n          item.title\r\n            .toLowerCase()\r\n            .includes(filters.title.toLowerCase())) &&\r\n        (filters.position.toLowerCase() === '' ||\r\n          item.position\r\n            .toLowerCase()\r\n            .includes(filters.position.toLowerCase())) &&\r\n        (filters.department === '0' ||\r\n          item.department._id === filters.department) &&\r\n        (filters.role === '0' ||\r\n          item.role._id === filters.role)\r\n      );\r\n    })\r\n  );\r\n  const departments = useSelector(\r\n    (state) => state.departmentState.departments\r\n  );\r\n  const isLoading = useSelector(\r\n    (state) => state.userState.isLoading\r\n  );\r\n  const roles = useSelector(\r\n    (state) => state.userState.roles\r\n  );\r\n  // const stateLogin = useSelector((state) => state.generalState.login);\r\n  const role = useSelector(\r\n    (state) => state.generalState.login?.role\r\n  );\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n      dispatch(fetchUsers()).then(() =>\r\n        dispatch(fetchRoles()).then(() =>\r\n          dispatch(fetchDepartments())\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const handleResetFilters = () => {\r\n    dispatch(\r\n      setUserFilters({\r\n        title: '',\r\n        position: '',\r\n        department: '0',\r\n        role: '0'\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFiltersOnChacge = (e) => {\r\n    // go from page 1\r\n    setCurrentPage(1);\r\n\r\n    dispatch(\r\n      setUserFilters({\r\n        ...filters,\r\n        [e.target.name]: e.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditBtn = (usr) => {\r\n    dispatch(setSelectedUser(usr));\r\n    history.push('/users/add');\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const usersTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return users.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, users]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  const UserTemplate = ({ user, cnt }) => {\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td nowrap='true'>\r\n            <b>\r\n              {currentPage === 1\r\n                ? cnt + 1\r\n                : pageSize * (currentPage - 1) + cnt + 1}\r\n            </b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-person-check-fill'></i>{' '}\r\n            &nbsp;\r\n            <b>{user.title}</b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-laptop'></i> &nbsp;\r\n            <b>{user.position}</b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-tools'></i> &nbsp;\r\n            <b>{user.department.name}</b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-envelope'></i> &nbsp;\r\n            <a href={`mailto:${user.email}`}>\r\n              {user.email}\r\n            </a>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-telephone'></i> &nbsp;\r\n            {user.telephone === null ||\r\n            user.telephone === ''\r\n              ? '---'\r\n              : user.telephone}\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-phone'></i> &nbsp;\r\n            {user.mobile === null || user.mobile === ''\r\n              ? '---'\r\n              : user.mobile}\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-phone-vibrate'></i> &nbsp;\r\n            {user.internalPhone === null ||\r\n            user.internalPhone === ''\r\n              ? '---'\r\n              : user.internalPhone}\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-key-fill'></i> &nbsp;\r\n            <span className='badge badge-primary badge-pill'>\r\n              {user.role.role}\r\n            </span>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-calendar3'></i> &nbsp;\r\n            {fixDate(user.createdAt)}\r\n          </td>\r\n          <td nowrap='true' align='center'>\r\n            <button\r\n              className='btn btn-sm btn-primary shadow-sm'\r\n              onClick={() => handleEditBtn(user)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-pencil'></i>\r\n            </button>{' '}\r\n            <button\r\n              className='btn btn-sm btn-danger shadow-sm'\r\n              onClick={() => handleDeleteBtn(user._id)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-trash'></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-people'></i> Users\r\n        </h5>\r\n        <div className='card-body overflow-auto'>\r\n          <Link\r\n            to='/users/add'\r\n            className={`btn btn-sm btn-primary shadow-sm ${\r\n              role !== 'Administrator' && 'disabled'\r\n            }`}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            <i className='bi bi-plus-lg'></i> New User\r\n          </Link>\r\n          <ScaleLoader\r\n            color={'#86C02E'}\r\n            loading={isLoading}\r\n            css={override}\r\n            size={150}\r\n          />\r\n          <div className='table-responsive'>\r\n            <table\r\n              border='0'\r\n              className='table table-sm table-hover'\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th nowrap='true' scope='col'>\r\n                    #\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Title\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Position\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Department\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Email\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Telephone\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Mobile\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    InternalPhone\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Role\r\n                  </th>\r\n                  <th nowrap='true' scope='col'>\r\n                    Created\r\n                  </th>\r\n                  <th nowrap='true' scope='col'></th>\r\n                </tr>\r\n                <tr>\r\n                  <th>\r\n                    <button\r\n                      className='btn btn-default btn-sm shadow-sm'\r\n                      onClick={handleResetFilters}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        className='fomr-control form-control-sm'\r\n                        id='title'\r\n                        name='title'\r\n                        value={filters.title}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        className='fomr-control form-control-sm'\r\n                        id='position'\r\n                        name='position'\r\n                        value={filters.position}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='department'\r\n                        name='department'\r\n                        value={filters.department}\r\n                        onChange={handleFiltersOnChacge}\r\n                      >\r\n                        <option\r\n                          key='pj'\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {departments &&\r\n                          departments.map((dprt) => (\r\n                            <option\r\n                              key={dprt._id}\r\n                              value={dprt._id}\r\n                            >\r\n                              {dprt.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        className='fomr-control form-control-sm'\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                  <th></th>\r\n                  <th></th>\r\n                  <th></th>\r\n                  <th>\r\n                    <div className='input-group input-group-sm flex-nowrap'>\r\n                      <div className='input-group-prepend'>\r\n                        <span\r\n                          className='input-group-text'\r\n                          id='basic-addon1'\r\n                        >\r\n                          <i className='bi bi-search'></i>\r\n                        </span>\r\n                      </div>\r\n                      <select\r\n                        className='form-control form-control-sm'\r\n                        id='role'\r\n                        name='role'\r\n                        value={filters.role}\r\n                        onChange={handleFiltersOnChacge}\r\n                        style={{\r\n                          border: '1px solid #cdcdcd',\r\n                          width: '100%'\r\n                        }}\r\n                      >\r\n                        <option\r\n                          key={'all'}\r\n                          value={'0'}\r\n                          defaultValue\r\n                        >\r\n                          ---\r\n                        </option>\r\n                        {roles &&\r\n                          roles.map((role) => (\r\n                            <option\r\n                              key={role._id}\r\n                              value={role._id}\r\n                            >\r\n                              {role.role}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </div>\r\n                  </th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {usersTableData.length > 0 &&\r\n                  usersTableData.map((user, i) => (\r\n                    <UserTemplate\r\n                      key={user._id}\r\n                      user={user}\r\n                      cnt={i}\r\n                    />\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n            <Pagination\r\n              className='pagination-bar'\r\n              currentPage={currentPage}\r\n              totalCount={users.length}\r\n              pageSize={pageSize}\r\n              onPageChange={(page) => setCurrentPage(page)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nUserList.propTypes = {\r\n  user: PropTypes.object,\r\n  cnt: PropTypes.number\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './department.css';\r\nimport { getValidatedUserInfo } from '../../shared/shared';\r\nimport {\r\n  insertDepartment,\r\n  setSelectedDepartment,\r\n  updateDepartment\r\n} from '../../state/actions/department-action';\r\nimport { setUserBySession } from '../../state/actions/general-action';\r\nimport ErrorCmp from '../error/error';\r\n\r\nexport default function DepartmentForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const department = useSelector(\r\n    (state) => state.departmentState.selectedDepartment\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.projectState.error\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const [departmentForm, setdepartmentForm] =\r\n    useState(department);\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedDepartment({\r\n        _id: 0,\r\n        name: '',\r\n        description: '',\r\n        isEnabled: true\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setdepartmentForm({\r\n      ...departmentForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (departmentForm._id === 0) {\r\n      // INSERT\r\n      departmentForm.createdBy = stateLogin.id;\r\n      dispatch(insertDepartment(history, departmentForm));\r\n    } else {\r\n      // UPDATE\r\n      departmentForm.updatedBy = stateLogin.id;\r\n      dispatch(updateDepartment(history, departmentForm));\r\n    }\r\n\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          Department Form\r\n          <div className='float-right'>\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>ID:</span>\r\n            &nbsp;{departmentForm._id}\r\n          </div>\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='name'>Name*</label>\r\n                <input\r\n                  type='mail'\r\n                  className='form-control form-control-sm'\r\n                  id='name'\r\n                  name='name'\r\n                  value={departmentForm.name}\r\n                  onChange={handleOnChange}\r\n                  maxLength='100'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-3'>\r\n                <label htmlFor='description'>\r\n                  Description*\r\n                </label>\r\n                <input\r\n                  type='mail'\r\n                  className='form-control form-control-sm'\r\n                  id='description'\r\n                  name='description'\r\n                  value={departmentForm.description}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagination from '../../shared/pagination/Pagination';\r\nimport {\r\n  fixDate,\r\n  getValidatedUserInfo,\r\n  getPageSize\r\n} from '../../shared/shared';\r\nimport {\r\n  fetchDepartments,\r\n  deleteDepartment,\r\n  setSelectedDepartment\r\n} from '../../state/actions/department-action';\r\nimport { setUserBySession } from '../../state/actions/general-action';\r\nimport ErrorCmp from '../error/error';\r\nimport './department.css';\r\n\r\nexport default function DepartmentList() {\r\n  const pageSize = getPageSize();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(\r\n    (state) =>\r\n      state.userState.error || state.departmentState.error\r\n  );\r\n  const departments = useSelector(\r\n    (state) => state.departmentState.departments\r\n  );\r\n  const role = useSelector(\r\n    (state) => state.generalState.login?.role\r\n  );\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n      dispatch(fetchDepartments());\r\n    }\r\n  }, []);\r\n\r\n  const handleEditBtn = (dprt) => {\r\n    dispatch(setSelectedDepartment(dprt));\r\n    history.push('/departments/add');\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      dispatch(deleteDepartment(id));\r\n    }\r\n  };\r\n\r\n  const DepartmentTemplate = ({ dprt, cnt }) => {\r\n    return (\r\n      <>\r\n        <tr>\r\n          <td nowrap='true'>\r\n            <b>\r\n              {currentPage === 1\r\n                ? cnt + 1\r\n                : pageSize * (currentPage - 1) + cnt + 1}\r\n            </b>\r\n          </td>\r\n          <td nowrap='true'>{dprt.id}</td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-person-check-fill'></i>{' '}\r\n            &nbsp;\r\n            <b>{dprt.name}</b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-laptop'></i> &nbsp;\r\n            <b>{dprt.description}</b>\r\n          </td>\r\n          <td nowrap='true'>\r\n            <i className='bi bi-calendar3'></i> &nbsp;\r\n            {fixDate(dprt.createdAt)}\r\n          </td>\r\n          <td nowrap='true' align='center'>\r\n            <button\r\n              className='btn btn-sm btn-primary shadow-sm'\r\n              onClick={() => handleEditBtn(dprt)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-pencil'></i>\r\n            </button>{' '}\r\n            <button\r\n              className='btn btn-sm btn-danger shadow-sm'\r\n              onClick={() => handleDeleteBtn(dprt._id)}\r\n              disabled={role !== 'Administrator'}\r\n            >\r\n              <i className='bi bi-trash'></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // -- pagination table data -----------------------------\r\n  const projectsTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * pageSize;\r\n    const lastPageIndex = firstPageIndex + pageSize;\r\n    return departments.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, departments]);\r\n  // -- pagination table data -----------------------------\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-person-check-fill'></i>{' '}\r\n          Departments\r\n        </h5>\r\n        <div className='card-body overflow-auto'>\r\n          <Link\r\n            to='/departments/add'\r\n            className={`btn btn-sm btn-primary shadow-sm ${\r\n              role !== 'Administrator' && 'disabled'\r\n            }`}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            <i className='bi bi-plus-lg'></i> New Department\r\n          </Link>\r\n          {projectsTableData.length > 0 && (\r\n            <div className='table-responsive'>\r\n              <table\r\n                border='0'\r\n                className='table table-sm table-hover'\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th nowrap='true' scope='col'>\r\n                      #\r\n                    </th>\r\n                    <th nowrap='true' scope='col'>\r\n                      Id\r\n                    </th>\r\n                    <th nowrap='true' scope='col'>\r\n                      Name\r\n                    </th>\r\n                    <th nowrap='true' scope='col'>\r\n                      Description\r\n                    </th>\r\n                    <th nowrap='true' scope='col'>\r\n                      Created\r\n                    </th>\r\n                    <th nowrap='true' scope='col'></th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    <th>\r\n                      <div className='input-group input-group-sm flex-nowrap'>\r\n                        <div className='input-group-prepend'>\r\n                          <span\r\n                            className='input-group-text'\r\n                            id='basic-addon1'\r\n                          >\r\n                            <i className='bi bi-search'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          type='text'\r\n                          className='fomr-control form-control-sm'\r\n                          style={{\r\n                            border: '1px solid #cdcdcd',\r\n                            width: '100%'\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                    <th>\r\n                      <div className='input-group input-group-sm flex-nowrap'>\r\n                        <div className='input-group-prepend'>\r\n                          <span\r\n                            className='input-group-text'\r\n                            id='basic-addon1'\r\n                          >\r\n                            <i className='bi bi-search'></i>\r\n                          </span>\r\n                        </div>\r\n                        <input\r\n                          type='text'\r\n                          className='fomr-control form-control-sm'\r\n                          style={{\r\n                            border: '1px solid #cdcdcd',\r\n                            width: '100%'\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                    <th>\r\n                      <div className='input-group input-group-sm flex-nowrap'>\r\n                        <div className='input-group-prepend'>\r\n                          <span\r\n                            className='input-group-text'\r\n                            id='basic-addon1'\r\n                          >\r\n                            <i className='bi bi-calendar3'></i>\r\n                          </span>\r\n                        </div>\r\n                        <DatePicker\r\n                          id='startDate'\r\n                          name='startDate'\r\n                          className='form-control form-control-sm'\r\n                          key='startDate'\r\n                          dateFormat='dd/MM/yyyy'\r\n                          selected={''}\r\n                          value={''}\r\n                          onChange={() => {}}\r\n                          style={{\r\n                            border: '1px solid #cdcdcd',\r\n                            width: '100%'\r\n                          }}\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {projectsTableData.map((dprt, i) => (\r\n                    <DepartmentTemplate\r\n                      key={dprt._id}\r\n                      dprt={dprt}\r\n                      cnt={i}\r\n                    />\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              <Pagination\r\n                className='pagination-bar'\r\n                currentPage={currentPage}\r\n                totalCount={departments.length}\r\n                pageSize={pageSize}\r\n                onPageChange={(page) =>\r\n                  setCurrentPage(page)\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nDepartmentList.propTypes = {\r\n  dprt: PropTypes.object,\r\n  cnt: PropTypes.number\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  getValidatedUserInfo,\r\n  saveValidatedUserInfo\r\n} from '../../shared/shared';\r\nimport { fetchDepartments } from '../../state/actions/department-action';\r\nimport {\r\n  fetchPriorities,\r\n  fetchStates,\r\n  getUserByLogin,\r\n  setUserBySession\r\n} from '../../state/actions/general-action';\r\nimport { fetchRoles } from '../../state/actions/user-action';\r\nimport ErrorCmp from '../error/error';\r\nimport './login.css';\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.generalState.error\r\n  );\r\n  const department = useSelector(\r\n    (state) => state.departmentState.departments\r\n  );\r\n  const role = useSelector(\r\n    (state) => state.userState.roles\r\n  );\r\n  const history = useHistory();\r\n  const [login, setLogin] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDepartments())\r\n      .then(() => dispatch(fetchRoles()))\r\n      .then(() => dispatch(fetchStates()))\r\n      .then(() => dispatch(fetchPriorities()))\r\n      .then(() => {\r\n        const userInfo = getValidatedUserInfo();\r\n        if (userInfo.id > 0) {\r\n          dispatch(setUserBySession(userInfo));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(getUserByLogin(login)).then((response) => {\r\n      if (response !== undefined) {\r\n        console.log(response);\r\n        const validatedUserInfo = {\r\n          id: response.data._id,\r\n          title: response.data.title,\r\n          email: response.data.email,\r\n          department: department.find(\r\n            (item) => item._id === response.data.department\r\n          ).name,\r\n          position: response.data.position,\r\n          role: role.find(\r\n            (item) => item._id === response.data.role\r\n          ).role\r\n        };\r\n        saveValidatedUserInfo(validatedUserInfo);\r\n        history.push('/');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChangeLoginInfo = (e) => {\r\n    setLogin({\r\n      ...login,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-lg-12'>\r\n        {error && <ErrorCmp err={error} />}\r\n        {!stateLogin ? (\r\n          <form\r\n            className='form-signin'\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <img\r\n              id='singin-logo'\r\n              src='/images/signin.gif'\r\n              alt=''\r\n            />\r\n            <h1\r\n              className='h3 m-3 font-weight-bold text-center'\r\n              style={{ fontSize: '1.3em !important' }}\r\n            >\r\n              Please sign in\r\n            </h1>\r\n            <label htmlFor='email' className='sr-only'>\r\n              Email address\r\n            </label>\r\n            <input\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              value={login.email}\r\n              onChange={handleChangeLoginInfo}\r\n              className='form-control'\r\n              placeholder='Email address'\r\n              required\r\n              autoFocus\r\n            />\r\n            <label htmlFor='password' className='sr-only'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              value={login.password}\r\n              onChange={handleChangeLoginInfo}\r\n              className='form-control'\r\n              placeholder='Password'\r\n              required\r\n            />\r\n            <div className='checkbox mb-3'>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  value='remember-me'\r\n                  disabled\r\n                />{' '}\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <button\r\n              className='btn btn-lg btn-primary btn-block'\r\n              type='submit'\r\n            >\r\n              Sign in\r\n            </button>\r\n            <p className='mt-5 mb-3 text-muted text-center'>\r\n              INTERLIFE ORBIES &copy; 2021\r\n            </p>\r\n          </form>\r\n        ) : (\r\n          <h1>\r\n            Already logged in <b>{stateLogin.title}</b>!\r\n          </h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { getValidatedUserInfo } from '../../../shared/shared';\r\nimport {\r\n  insertSelectedComputeDuration,\r\n  setSelectedComputeDuration,\r\n  setUserBySession,\r\n  updateComputeDuration\r\n} from '../../../state/actions/general-action';\r\nimport ErrorCmp from '../../error/error';\r\nimport './duration.css';\r\n\r\nexport default function DurationForm() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const compDuration = useSelector(\r\n    (state) => state.generalState.selectedComputedDuration\r\n  );\r\n  const stateLogin = useSelector(\r\n    (state) => state.generalState.login\r\n  );\r\n  const error = useSelector(\r\n    (state) => state.generalState.error\r\n  );\r\n\r\n  const [compDurationForm, setcompDurationForm] =\r\n    useState(compDuration);\r\n\r\n  useEffect(() => {\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo === null || userInfo.title === null) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelBtn = () => {\r\n    // clear and redirect\r\n    clearObj();\r\n    history.goBack();\r\n  };\r\n\r\n  const clearObj = () => {\r\n    dispatch(\r\n      setSelectedComputeDuration({\r\n        _id: 0,\r\n        code: '',\r\n        description: '',\r\n        factor: 0,\r\n        isDefault: false,\r\n        isEnabled: true,\r\n        updatedBy: null,\r\n        updatedAt: null,\r\n        createdBy: null,\r\n        creaatedAt: null\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setcompDurationForm({\r\n      ...compDurationForm,\r\n      [e.target.name]:\r\n        e.target.name === 'factor'\r\n          ? e.target.value === ''\r\n            ? '0'\r\n            : e.target.value\r\n          : e.target.value\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (compDurationForm._id === 0) {\r\n      // INSERT\r\n      compDurationForm.createdBy = stateLogin.id;\r\n      dispatch(\r\n        insertSelectedComputeDuration(\r\n          history,\r\n          compDurationForm\r\n        )\r\n      );\r\n    } else {\r\n      // UPDATE\r\n      compDurationForm.updatedBy = stateLogin.id;\r\n      dispatch(\r\n        updateComputeDuration(history, compDurationForm)\r\n      );\r\n    }\r\n    // clear\r\n    clearObj();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          Duration Form\r\n          <div className='float-right'>\r\n            &nbsp;&nbsp;{' '}\r\n            <span className='text-muted'>ID:</span>\r\n            &nbsp;{compDurationForm.id}\r\n          </div>\r\n        </h5>\r\n        <div className='card-body'>\r\n          <form onSubmit={handleOnSubmit}>\r\n            <div className='form-row'>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='code'>Code*</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='code'\r\n                  name='code'\r\n                  value={compDurationForm.code}\r\n                  onChange={handleOnChange}\r\n                  maxLength='100'\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-4'>\r\n                <label htmlFor='description'>\r\n                  Description*\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-sm'\r\n                  id='description'\r\n                  name='description'\r\n                  value={compDurationForm.description}\r\n                  onChange={handleOnChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='form-group col-md-2'>\r\n                <label htmlFor='factor'>Factor*</label>\r\n                <input\r\n                  type='number'\r\n                  className='form-control form-control-sm'\r\n                  id='factor'\r\n                  name='factor'\r\n                  value={compDurationForm.factor}\r\n                  onChange={handleOnChange}\r\n                  min='0'\r\n                  step='.01'\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary shadow-sm'\r\n            >\r\n              <i className='bi bi-hdd'></i> Save\r\n            </button>{' '}\r\n            <button\r\n              type='button'\r\n              className='btn btn-danger shadow-sm'\r\n              onClick={handleCancelBtn}\r\n            >\r\n              <i className='bi bi-x-square'></i> Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ScaleLoader from 'react-spinners/ScaleLoader';\r\nimport { getValidatedUserInfo } from '../../../shared/shared';\r\nimport {\r\n  deleteComputeDuration,\r\n  fetchComputeDurations,\r\n  setSelectedComputeDuration,\r\n  setUserBySession\r\n} from '../../../state/actions/general-action';\r\nimport ErrorCmp from '../../error/error';\r\nimport './duration.css';\r\n\r\nconst override = css`\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n  border-color: red;\r\n  width: 44px;\r\n  float: right;\r\n`;\r\n\r\nexport default function DurationList() {\r\n  const currentPage = 1;\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(\r\n    (state) => state.generalState.error\r\n  );\r\n  const role = useSelector(\r\n    (state) => state.generalState.login?.role\r\n  );\r\n  const durations = useSelector(\r\n    (state) => state.generalState.computeDurations\r\n  );\r\n  const isLoading = useSelector(\r\n    (state) => state.projectState.isLoading\r\n  );\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // user validation\r\n    const userInfo = getValidatedUserInfo();\r\n    if (userInfo.id === 0) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(setUserBySession(userInfo));\r\n      // fetch computed durations\r\n      dispatch(fetchComputeDurations());\r\n    }\r\n  }, []);\r\n\r\n  const handleEditBtn = (dur) => {\r\n    dispatch(setSelectedComputeDuration(dur));\r\n    history.push('/settings/computeduration/add');\r\n  };\r\n\r\n  const handleDeleteBtn = (id) => {\r\n    if (confirm('Are you sure you want to delete it?')) {\r\n      dispatch(deleteComputeDuration(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <ErrorCmp err={error} />}\r\n      <div className='card shadow-lg'>\r\n        <h5 className='card-header'>\r\n          <i className='bi bi-clock'></i> Computed Durations\r\n        </h5>\r\n        <div className='card-body overflow-auto'>\r\n          <Link\r\n            to='/settings/computeduration/add'\r\n            className={`btn btn-sm btn-primary shadow-sm ${\r\n              role !== 'Administrator' && 'disabled'\r\n            }`}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            <i className='bi bi-plus-lg'></i> New Unit\r\n          </Link>\r\n          <ScaleLoader\r\n            color={'#86C02E'}\r\n            loading={isLoading}\r\n            css={override}\r\n            size={150}\r\n          />\r\n          <br />\r\n          <div className='table-responsive-sm'>\r\n            <table className='table table-sm table-hover table-bordered'>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>ID</th>\r\n                  <th scope='col'>Code</th>\r\n                  <th scope='col'>Description</th>\r\n                  <th scope='col'>Factor</th>\r\n                  <th nowrap='true'></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {durations &&\r\n                  durations.map((item, cnt) => (\r\n                    <tr key={item._id}>\r\n                      <td nowrap='true'>\r\n                        {' '}\r\n                        <b>\r\n                          {currentPage === 1\r\n                            ? cnt + 1\r\n                            : pageSize * (currentPage - 1) +\r\n                              cnt +\r\n                              1}\r\n                        </b>\r\n                      </td>\r\n                      <td nowrap='true'>{item.code}</td>\r\n                      <td nowrap='true'>\r\n                        {item.description}\r\n                      </td>\r\n                      <td nowrap='true' align='right'>\r\n                        <b>\r\n                          {Number.parseFloat(\r\n                            item.factor\r\n                          ).toFixed(2)}\r\n                        </b>\r\n                      </td>\r\n                      <td nowrap='true' align='center'>\r\n                        <button\r\n                          className='btn btn-sm btn-primary shadow-sm'\r\n                          onClick={() =>\r\n                            handleEditBtn(item)\r\n                          }\r\n                          disabled={\r\n                            role !== 'Administrator'\r\n                          }\r\n                        >\r\n                          <i className='bi bi-pencil'></i>\r\n                        </button>{' '}\r\n                        <button\r\n                          className='btn btn-sm btn-danger shadow-sm'\r\n                          onClick={() =>\r\n                            handleDeleteBtn(item._id)\r\n                          }\r\n                          disabled={\r\n                            role !== 'Administrator'\r\n                          }\r\n                        >\r\n                          <i className='bi bi-trash'></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SideBar from '../../components/navbars/sidebar/sidebar';\r\nimport TopBar from '../../components/navbars/topbar/topbar';\r\nimport ProjectForm from '../../components/project/project-form';\r\nimport ProjectList from '../../components/project/project-list';\r\nimport CommentForm from '../../components/task/comment/comment-form';\r\nimport SubTaskForm from '../../components/task/subtask/subtask-form';\r\nimport TaskDetails from '../../components/task/task-details';\r\nimport TaskForm from '../../components/task/task-form';\r\nimport TaskList from '../../components/task/task-list';\r\nimport UserForm from '../../components/user/user-form';\r\nimport UserList from '../../components/user/user-list';\r\nimport DepartmentForm from '../departments/department-form';\r\nimport DepartmentList from '../departments/department-list';\r\nimport Login from '../login/login';\r\nimport DurationForm from '../settings/durations/duration-form';\r\nimport DurationList from '../settings/durations/duration-list';\r\nimport './content.css';\r\n\r\nexport default function Content() {\r\n  const sideBarState = useSelector((state) => state.generalState.sideBar);\r\n\r\n  useEffect(() => {\r\n  }, [sideBarState]);\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <SideBar />\r\n      <div id=\"content\" className={(sideBarState === '' ? 'active' : '')}>\r\n        <TopBar />\r\n        <div className='row'>\r\n          <div className='col-lg-12'>\r\n            <Switch>\r\n              <Route path='/login' exact>\r\n                <Login />\r\n              </Route>\r\n              <Route path='/tasks' exact>\r\n                <TaskList />\r\n              </Route>\r\n              <Route path='/tasks/add'>\r\n                <TaskForm />\r\n              </Route>\r\n              <Route path='/tasks/comments/add'>\r\n                <CommentForm />\r\n              </Route>\r\n              <Route path='/tasks/subtasks/add'>\r\n                <SubTaskForm />\r\n              </Route>\r\n              <Route path='/tasks/details/:id'>\r\n                <TaskDetails />\r\n              </Route>\r\n              <Route path='/' exact>\r\n                <ProjectList />\r\n              </Route>\r\n              <Route path='/add'>\r\n                <ProjectForm />\r\n              </Route>\r\n              <Route path='/users' exact>\r\n                <UserList />\r\n              </Route>\r\n              <Route path='/users/add'>\r\n                <UserForm />\r\n              </Route>\r\n              <Route path='/departments' exact>\r\n                <DepartmentList />\r\n              </Route>\r\n              <Route path='/departments/add'>\r\n                <DepartmentForm />\r\n              </Route>\r\n              <Route path='/settings/computeduration' exact>\r\n                <DurationList />\r\n              </Route>\r\n              <Route path='/settings/computeduration/add'>\r\n                <DurationForm />\r\n              </Route>\r\n              <Route path='*'>\r\n                <img\r\n                  id=\"notfound\"\r\n                  src=\"/images/404-Error.gif\"\r\n                  alt=\"404-page-not-found\" />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  DEPARTMENT_FILTERS,\r\n  DEPARTMENT_FETCH,\r\n  DEPARTMENT_USER_FETCH,\r\n  DEPARTMENT_INSERT,\r\n  DEPARTMENT_UPDATE,\r\n  DEPARTMENT_DELETE,\r\n  DEPARTMENT_DEACTIVATE,\r\n  DEPARTMENT_ERROR,\r\n  SELECTED_DEPARTMENT,\r\n  DEPARTMENT_RESET_STATE\r\n} from '../actions/department-action';\r\n\r\nconst initialState = {\r\n  departments: [],\r\n  selectedDepartment: {\r\n    _id: 0,\r\n    name: '',\r\n    description: '',\r\n    isEnabled: true\r\n  },\r\n  error: null\r\n};\r\n\r\nexport default function departmentReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case DEPARTMENT_FILTERS:\r\n      return {\r\n        ...state,\r\n        departments: action.payload\r\n      };\r\n    case DEPARTMENT_FETCH:\r\n    case DEPARTMENT_USER_FETCH:\r\n      return {\r\n        ...state,\r\n        departments: action.payload,\r\n        selectedDepartment: {\r\n          _id: 0,\r\n          name: '',\r\n          description: '',\r\n          isEnabled: true\r\n        },\r\n        error: null\r\n      };\r\n    case DEPARTMENT_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case DEPARTMENT_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case DEPARTMENT_DELETE:\r\n      return {\r\n        ...state,\r\n        departments: state.departments.filter((dprt) => {\r\n          return dprt._id !== action.payload;\r\n        }),\r\n        error: null\r\n      };\r\n    case DEPARTMENT_DEACTIVATE:\r\n      return {\r\n        ...state,\r\n        departments: state.departments.filter((dprt) => {\r\n          return (\r\n            dprt._id !== action.payload &&\r\n            dprt.isEnabled === true\r\n          );\r\n        }),\r\n        error: null\r\n      };\r\n    case DEPARTMENT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SELECTED_DEPARTMENT:\r\n      return {\r\n        ...state,\r\n        selectedDepartment: action.payload,\r\n        error: null\r\n      };\r\n    case DEPARTMENT_RESET_STATE:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOGIN,\r\n  USER_LOGIN_RESET,\r\n  USER_SESSION_SET,\r\n  COMPUTED_DURATION_DEFAULT,\r\n  COMPUTED_DURATION_FETCH,\r\n  COMPUTED_DURATION_UPDATE,\r\n  COMPUTED_DURATION_ERROR,\r\n  SELECTED_COMPUTED_DURATION,\r\n  STATE_FETCH,\r\n  PRIORITY_FETCH,\r\n  SIDEBAR_STATE,\r\n  GENERAL_ERROR,\r\n  COMPUTED_DURATION_INSERT,\r\n  COMPUTED_DURATION_DELETE\r\n} from '../actions/general-action';\r\n\r\nconst initialState = {\r\n  login: null,\r\n  states: [],\r\n  priorities: [],\r\n  sideBar: 'active',\r\n  computeDurations: [],\r\n  defaultComputedDuration: {\r\n    code: '',\r\n    description: '',\r\n    factor: 0,\r\n    isDefault: false,\r\n    isEnabled: true,\r\n    updatedBy: null,\r\n    updatedAt: null,\r\n    createdBy: null,\r\n    creaatedAt: null\r\n  },\r\n  selectedComputedDuration: {\r\n    _id: 0,\r\n    code: '',\r\n    description: '',\r\n    factor: 0,\r\n    isDefault: false,\r\n    isEnabled: true,\r\n    updatedBy: null,\r\n    updatedAt: null,\r\n    createdBy: null,\r\n    creaatedAt: null\r\n  },\r\n  error: null\r\n};\r\n\r\nexport default function generalReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case USER_LOGIN:\r\n    case USER_SESSION_SET:\r\n      return {\r\n        ...state,\r\n        login: action.payload,\r\n        error: null\r\n      };\r\n    case COMPUTED_DURATION_DEFAULT:\r\n      return {\r\n        ...state,\r\n        defaultComputedDuration: action.payload\r\n      };\r\n    case COMPUTED_DURATION_FETCH:\r\n      return {\r\n        ...state,\r\n        computeDurations: action.payload\r\n      };\r\n    case COMPUTED_DURATION_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case COMPUTED_DURATION_DELETE:\r\n      return {\r\n        ...state,\r\n        computeDurations: state.computeDurations.filter(\r\n          (dur) => {\r\n            return (\r\n              dur._id !== action.payload &&\r\n              dur.isEnabled === true\r\n            );\r\n          }\r\n        ),\r\n        error: null\r\n      };\r\n    case COMPUTED_DURATION_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SELECTED_COMPUTED_DURATION:\r\n      return {\r\n        ...state,\r\n        selectedComputedDuration: action.payload\r\n      };\r\n    case USER_LOGIN_RESET:\r\n      return {\r\n        ...state,\r\n        login: null,\r\n        computeDurations: initialState.computeDurations,\r\n        defaultComputedDuration:\r\n          initialState.defaultComputedDuration,\r\n        selectedComputedDuration:\r\n          initialState.selectedComputedDuration,\r\n        states: initialState.states,\r\n        priorities: initialState.priorities\r\n      };\r\n    case STATE_FETCH:\r\n      return {\r\n        ...state,\r\n        states: action.payload\r\n      };\r\n    case PRIORITY_FETCH:\r\n      return {\r\n        ...state,\r\n        priorities: action.payload\r\n      };\r\n    case SIDEBAR_STATE:\r\n      return {\r\n        ...state,\r\n        sideBar: action.payload\r\n      };\r\n    case GENERAL_ERROR:\r\n    case COMPUTED_DURATION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  PROJECT_ACTIVE_COUNT,\r\n  PROJECT_FILTERS,\r\n  PROJECT_FETCH,\r\n  PROJECT_USER_FETCH,\r\n  PROJECT_INSERT,\r\n  PROJECT_UPDATE,\r\n  PROJECT_DELETE,\r\n  PROJECT_DEACTIVATE,\r\n  PROJECT_ERROR,\r\n  PROJECT_ISLOADING,\r\n  SELECTED_PROJECT,\r\n  PROJECT_RESET_STATE\r\n} from '../actions/project-action';\r\n\r\nconst initialState = {\r\n  activeProjects: 0,\r\n  projects: [],\r\n  selectedProject: {\r\n    _id: 0,\r\n    projectName: '',\r\n    description: '',\r\n    duration: 0,\r\n    computedDuration: 0,\r\n    durationUnit: 0,\r\n    deadline: new Date(),\r\n    isEnabled: true,\r\n    state: '',\r\n    priority: '',\r\n    tasks: [],\r\n    createdBy: null,\r\n    updatedAt: null,\r\n    updatedBy: null\r\n  },\r\n  filters: {\r\n    createdFrom: '',\r\n    createdTo: '',\r\n    name: '',\r\n    description: '',\r\n    duration: 0,\r\n    deadlineFrom: '',\r\n    deadlineTo: '',\r\n    priority: '0',\r\n    state: '0',\r\n    selectedUser: 0,\r\n    selectedMonthFrom: 0,\r\n    selectedMonthTo: 0\r\n  },\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport default function projectReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case PROJECT_ACTIVE_COUNT:\r\n      return {\r\n        ...state,\r\n        activeProjects: action.payload\r\n      };\r\n    case PROJECT_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      };\r\n    case PROJECT_ISLOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case PROJECT_FETCH:\r\n    case PROJECT_USER_FETCH:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n        selectedProject: {\r\n          _id: 0,\r\n          projectName: '',\r\n          description: '',\r\n          duration: 0,\r\n          computedDuration: 0,\r\n          durationUnit: 0,\r\n          deadline: new Date(),\r\n          isEnabled: true,\r\n          state: '',\r\n          priority: '',\r\n          tasks: [],\r\n          createdBy: null,\r\n          updatedAt: null,\r\n          updatedBy: null\r\n        },\r\n        error: null\r\n      };\r\n    case PROJECT_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case PROJECT_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case PROJECT_DELETE:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter((prj) => {\r\n          return prj._id !== action.payload;\r\n        }),\r\n        error: null\r\n      };\r\n    case PROJECT_DEACTIVATE:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter((prj) => {\r\n          return (\r\n            prj._id !== action.payload &&\r\n            prj.isEnabled === true\r\n          );\r\n        }),\r\n        error: null\r\n      };\r\n    case PROJECT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case PROJECT_RESET_STATE:\r\n      return initialState;\r\n    case SELECTED_PROJECT:\r\n      return {\r\n        ...state,\r\n        selectedProject: action.payload,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TASK_ACTIVE_COUNT,\r\n  TASK_USER_FETCH,\r\n  TASK_FILTERS,\r\n  TASK_FETCH,\r\n  TASK_FETCH_ID,\r\n  TASK_INSERT,\r\n  TASK_UPDATE,\r\n  TASK_DELETE,\r\n  TASK_DEACTIVATE,\r\n  TASK_ERROR,\r\n  TASK_ISLOADING,\r\n  TASK_RESET_STATE,\r\n  SELECTED_TASK,\r\n  COMMENT_INSERT,\r\n  COMMENT_UPDATE,\r\n  COMMENT_DELETE,\r\n  COMMENT_DEACTIVATE,\r\n  SELECTED_COMMENT,\r\n  SUBTASK_INSERT,\r\n  SUBTASK_UPDATE,\r\n  SUBTASK_DELETE,\r\n  SUBTASK_DEACTIVATE,\r\n  SELECTED_SUBTASK\r\n} from '../actions/task-action';\r\n\r\nconst initialState = {\r\n  activeTasks: 0,\r\n  tasks: [],\r\n  taskById: null, // the details task page\r\n  selectedTask: {\r\n    _id: 0,\r\n    taskName: '',\r\n    description: '',\r\n    startDate: new Date(),\r\n    endDate: null,\r\n    duration: 0,\r\n    isEnabled: true,\r\n    state: '',\r\n    priority: '',\r\n    assignedTo: '',\r\n    project: 0,\r\n    createdBy: null,\r\n    updatedAt: null,\r\n    updatedBy: null\r\n  },\r\n  selectedComment: {\r\n    // selected comment for new - edit\r\n    _id: 0,\r\n    description: '',\r\n    task: '',\r\n    user: '',\r\n    isEnabled: true,\r\n    createdBy: null,\r\n    updatedAt: null,\r\n    updatedBy: null\r\n  },\r\n  selectedSubTask: {\r\n    // selected subt task for new - edit\r\n    _id: 0,\r\n    subTaskName: '',\r\n    description: '',\r\n    startDate: new Date(),\r\n    startTime: null,\r\n    duration: 0,\r\n    computedDuration: 0,\r\n    durationUnit: 0,\r\n    task: null,\r\n    isEnabled: true,\r\n    guid: '',\r\n    createdBy: null,\r\n    updatedAt: null,\r\n    updatedBy: null\r\n  },\r\n  filters: {\r\n    project: '',\r\n    name: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    duration: 0,\r\n    priority: '0',\r\n    state: '0',\r\n    selectedUser: 0,\r\n    startDateFrom: 0,\r\n    startDateTo: 0\r\n  },\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport default function taskReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case TASK_ACTIVE_COUNT:\r\n      return {\r\n        ...state,\r\n        activeTasks: action.payload\r\n      };\r\n    case TASK_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      };\r\n    case TASK_ISLOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case TASK_FETCH:\r\n    case TASK_USER_FETCH:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        selectedTask: {\r\n          _id: 0,\r\n          taskName: '',\r\n          description: '',\r\n          startDate: new Date(),\r\n          endDate: null,\r\n          duration: 0,\r\n          isEnabled: true,\r\n          state: '',\r\n          priority: '',\r\n          assignedTo: '',\r\n          project: 0,\r\n          createdBy: null,\r\n          updatedAt: null,\r\n          updatedBy: null\r\n        },\r\n        error: null\r\n      };\r\n    case TASK_FETCH_ID:\r\n      return {\r\n        ...state,\r\n        taskById: action.payload\r\n      };\r\n    case TASK_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case TASK_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case TASK_DELETE:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((tsk) => {\r\n          return tsk.id !== action.payload;\r\n        }),\r\n        error: null\r\n      };\r\n    case TASK_DEACTIVATE:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((tsk) => {\r\n          return tsk.id !== action.payload;\r\n        }),\r\n        error: null\r\n      };\r\n    case TASK_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case TASK_RESET_STATE:\r\n      return initialState;\r\n    case SELECTED_TASK:\r\n      return {\r\n        ...state,\r\n        selectedTask: action.payload,\r\n        error: null\r\n      };\r\n    case COMMENT_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case COMMENT_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case COMMENT_DELETE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case COMMENT_DEACTIVATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SELECTED_COMMENT:\r\n      return {\r\n        ...state,\r\n        selectedComment: action.payload,\r\n        error: null\r\n      };\r\n    case SUBTASK_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SUBTASK_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SUBTASK_DELETE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SUBTASK_DEACTIVATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SELECTED_SUBTASK:\r\n      return {\r\n        ...state,\r\n        selectedSubTask: action.payload,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ROLE_FETCH,\r\n  USER_FILTERS,\r\n  USER_FETCH,\r\n  USER_INSERT,\r\n  USER_UPDATE,\r\n  USER_DELETE,\r\n  USER_ERROR,\r\n  USER_ISLOADING,\r\n  SELECTED_USER,\r\n  USER_RESET_STATE\r\n} from '../actions/user-action';\r\n\r\nconst initialState = {\r\n  roles: [],\r\n  users: [],\r\n  selectedUser: {\r\n    _id: 0,\r\n    username: '',\r\n    password: '',\r\n    position: '',\r\n    department: '0',\r\n    email: '',\r\n    telephone: '',\r\n    mobile: '',\r\n    internalPhone: '',\r\n    title: '',\r\n    isEnabled: true,\r\n    role: '0',\r\n    createdBy: null,\r\n    updatedBy: null,\r\n    updatedAt: null\r\n  },\r\n  filters: {\r\n    title: '',\r\n    position: '',\r\n    department: '0',\r\n    role: '0'\r\n  },\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nexport default function userReducer(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case USER_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      };\r\n    case USER_ISLOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case ROLE_FETCH:\r\n      return {\r\n        ...state,\r\n        roles: action.payload\r\n      };\r\n    case USER_FETCH:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        selectedUser: {\r\n          _id: 0,\r\n          username: '',\r\n          password: '',\r\n          position: '',\r\n          department: '0',\r\n          email: '',\r\n          telephone: '',\r\n          mobile: '',\r\n          internalPhone: '',\r\n          title: '',\r\n          isEnabled: true,\r\n          role: '0',\r\n          createdBy: null,\r\n          updatedBy: null,\r\n          updatedAt: null\r\n        },\r\n        error: null\r\n      };\r\n    case USER_INSERT:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case USER_UPDATE:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case USER_DELETE:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((usr) => {\r\n          return usr.id !== action.payload;\r\n        }),\r\n        error: null\r\n      };\r\n    case USER_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SELECTED_USER:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.payload,\r\n        error: null\r\n      };\r\n    case USER_RESET_STATE:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport departmentReducer from './department-reducer';\r\nimport generalReducer from './general-reducer';\r\nimport projectReducer from './project-reducer';\r\nimport taskReducer from './task-reducer';\r\nimport userReducer from './user-reducer';\r\n\r\nexport default combineReducers({\r\n  generalState: generalReducer,\r\n  projectState: projectReducer,\r\n  taskState: taskReducer,\r\n  userState: userReducer,\r\n  departmentState: departmentReducer\r\n});\r\n","import {\r\n  createStore,\r\n  applyMiddleware,\r\n  compose\r\n} from 'redux';\r\n// import logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { forPublish } from '../shared/globals';\r\nimport rootReducer from './reducers/root-reducer';\r\n\r\n// const middleware = [thunk, logger];\r\nconst middleware = [thunk];\r\nlet store = null;\r\n\r\nif (!forPublish) {\r\n  store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__({\r\n        trace: false,\r\n        traceLimit: 25\r\n      })\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(...middleware)\r\n    )\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n// import Login from './components/login/login';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Content from './components/content/content';\r\nimport store from './state/store';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ToastContainer autoClose={3000} />\r\n      <Content />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}